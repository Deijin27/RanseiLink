// This file is automatically generated

using RanseiLink.Core.Enums;
using RanseiLink.Core.Graphics;

namespace RanseiLink.Core.Models;

public partial class BattleConfig : BaseDataWindow
{
    public const int DataLength = 0x18;
    public BattleConfig(byte[] data) : base(data, DataLength) { }
    public BattleConfig() : this(new byte[DataLength]) { }

    public int Map
    {
        get => GetInt(0, 0, 6);
        set => SetInt(0, 0, 6, value);
    }

    public int MapVariant
    {
        get => GetInt(0, 6, 5);
        set => SetInt(0, 6, 5, value);
    }

    public int Minimap
    {
        get => GetInt(2, 13, 5);
        set => SetInt(2, 13, 5, value);
    }

    public int MinimapVariant
    {
        get => GetInt(2, 10, 3);
        set => SetInt(2, 10, 3, value);
    }

    public int Unknown
    {
        get => GetInt(2, 18, 6);
        set => SetInt(2, 18, 6, value);
    }

    public Rgb15 UpperAtmosphereColor
    {
        get => (Rgb15)GetInt(0, 11, 15);
        set => SetInt(0, 11, 15, (int)value);
    }

    public Rgb15 MiddleAtmosphereColor
    {
        get => (Rgb15)GetInt(1, 0, 15);
        set => SetInt(1, 0, 15, (int)value);
    }

    public Rgb15 LowerAtmosphereColor
    {
        get => (Rgb15)GetInt(1, 15, 15);
        set => SetInt(1, 15, 15, (int)value);
    }

    public BattleVictoryConditionFlags VictoryCondition
    {
        get => (BattleVictoryConditionFlags)GetInt(2, 0, 5);
        set => SetInt(2, 0, 5, (int)value);
    }

    public BattleVictoryConditionFlags DefeatCondition
    {
        get => (BattleVictoryConditionFlags)GetInt(2, 5, 5);
        set => SetInt(2, 5, 5, (int)value);
    }

    public int NumberOfTurns
    {
        get => GetInt(2, 24, 5);
        set => SetInt(2, 24, 5, value);
    }
}