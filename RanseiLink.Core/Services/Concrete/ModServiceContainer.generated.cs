// This file is automatically generated

#nullable enable

using RanseiLink.Core.Services.ModelServices;

namespace RanseiLink.Core.Services.Concrete;

public partial class ModServiceContainer
{
    private readonly Lazy<IAbilityService> _Ability = new(modServices.Get<IAbilityService>);
    public IAbilityService Ability => _Ability.Value;

    private readonly Lazy<IBaseWarriorService> _BaseWarrior = new(modServices.Get<IBaseWarriorService>);
    public IBaseWarriorService BaseWarrior => _BaseWarrior.Value;

    private readonly Lazy<IBattleConfigService> _BattleConfig = new(modServices.Get<IBattleConfigService>);
    public IBattleConfigService BattleConfig => _BattleConfig.Value;

    private readonly Lazy<IBuildingService> _Building = new(modServices.Get<IBuildingService>);
    public IBuildingService Building => _Building.Value;

    private readonly Lazy<IEpisodeService> _Episode = new(modServices.Get<IEpisodeService>);
    public IEpisodeService Episode => _Episode.Value;

    private readonly Lazy<IEventSpeakerService> _EventSpeaker = new(modServices.Get<IEventSpeakerService>);
    public IEventSpeakerService EventSpeaker => _EventSpeaker.Value;

    private readonly Lazy<IGimmickService> _Gimmick = new(modServices.Get<IGimmickService>);
    public IGimmickService Gimmick => _Gimmick.Value;

    private readonly Lazy<IGimmickObjectService> _GimmickObject = new(modServices.Get<IGimmickObjectService>);
    public IGimmickObjectService GimmickObject => _GimmickObject.Value;

    private readonly Lazy<IItemService> _Item = new(modServices.Get<IItemService>);
    public IItemService Item => _Item.Value;

    private readonly Lazy<IKingdomService> _Kingdom = new(modServices.Get<IKingdomService>);
    public IKingdomService Kingdom => _Kingdom.Value;

    private readonly Lazy<IMaxLinkService> _MaxLink = new(modServices.Get<IMaxLinkService>);
    public IMaxLinkService MaxLink => _MaxLink.Value;

    private readonly Lazy<IMoveService> _Move = new(modServices.Get<IMoveService>);
    public IMoveService Move => _Move.Value;

    private readonly Lazy<IMoveAnimationService> _MoveAnimation = new(modServices.Get<IMoveAnimationService>);
    public IMoveAnimationService MoveAnimation => _MoveAnimation.Value;

    private readonly Lazy<IMoveRangeService> _MoveRange = new(modServices.Get<IMoveRangeService>);
    public IMoveRangeService MoveRange => _MoveRange.Value;

    private readonly Lazy<IGimmickRangeService> _GimmickRange = new(modServices.Get<IGimmickRangeService>);
    public IGimmickRangeService GimmickRange => _GimmickRange.Value;

    private readonly Lazy<IPokemonService> _Pokemon = new(modServices.Get<IPokemonService>);
    public IPokemonService Pokemon => _Pokemon.Value;

    private readonly Lazy<IWarriorSkillService> _WarriorSkill = new(modServices.Get<IWarriorSkillService>);
    public IWarriorSkillService WarriorSkill => _WarriorSkill.Value;

}
