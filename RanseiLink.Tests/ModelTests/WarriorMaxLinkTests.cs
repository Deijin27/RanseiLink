using RanseiLink.Core.Models;
using RanseiLink.Core.Models.Interfaces;
using Xunit;
using RanseiLink.Core.Enums;

namespace RanseiLink.Tests.ModelTests
{
    public class WarriorMaxLinkTests
    {
        [Fact]
        public void AccessorsReturnCorrectValues()
        {
            IWarriorMaxLink model = new WarriorMaxLink(new byte[]
            {
                0x64, 0x5A, 0x5A, 0x5A, 0x5A, 0x5A, 0x5A, 0x5A, 0x50, 0x50, 0x50, 0x32, 0x56, 0x56, 0x50, 0x50,
                0x56, 0x50, 0x50, 0x5A, 0x5A, 0x5A, 0x50, 0x50, 0x50, 0x5A, 0x5A, 0x5A, 0x5A, 0x5A, 0x56, 0x56,
                0x56, 0x50, 0x58, 0x58, 0x5A, 0x5A, 0x5A, 0x50, 0x56, 0x56, 0x50, 0x50, 0x58, 0x58, 0x58, 0x50,
                0x50, 0x32, 0x32, 0x50, 0x50, 0x50, 0x56, 0x54, 0x54, 0x5A, 0x5A, 0x50, 0x50, 0x50, 0x54, 0x54,
                0x54, 0x50, 0x58, 0x58, 0x54, 0x54, 0x54, 0x50, 0x50, 0x50, 0x52, 0x46, 0x4C, 0x4C, 0x46, 0x46,
                0x46, 0x4A, 0x4A, 0x4A, 0x46, 0x4C, 0x4C, 0x32, 0x32, 0x46, 0x46, 0x46, 0x50, 0x50, 0x58, 0x5A,
                0x5A, 0x32, 0x32, 0x32, 0x32, 0x32, 0x32, 0x58, 0x58, 0x50, 0x56, 0x56, 0x56, 0x5A, 0x5A, 0x50,
                0x50, 0x50, 0x32, 0x32, 0x32, 0x50, 0x58, 0x58, 0x32, 0x32, 0x32, 0x54, 0x54, 0x54, 0x50, 0x56,
                0x56, 0x50, 0x58, 0x58, 0x54, 0x5A, 0x5A, 0x50, 0x50, 0x56, 0x56, 0x50, 0x50, 0x56, 0x56, 0x50,
                0x58, 0x58, 0x56, 0x58, 0x54, 0x5A, 0x5A, 0x50, 0x50, 0x56, 0x56, 0x54, 0x54, 0x56, 0x56, 0x58,
                0x58, 0x58, 0x4A, 0x4A, 0x32, 0x32, 0x50, 0x50, 0x5A, 0x5A, 0x46, 0x46, 0x4E, 0x4E, 0x50, 0x50,
                0x4E, 0x5A, 0x5A, 0x50, 0x50, 0x50, 0x46, 0x46, 0x5A, 0x50, 0x54, 0x48, 0x4E, 0x42, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x28, 0x00
            });

            Assert.Equal(100u, model.GetMaxLink(PokemonId.Eevee));
            Assert.Equal(90u, model.GetMaxLink(PokemonId.Jolteon));
        }

        [Fact]
        public void AccessorsSetCorrectValues()
        {
            IWarriorMaxLink model = new WarriorMaxLink();
            model.SetMaxLink(PokemonId.Eevee, 75);
            model.SetMaxLink(PokemonId.Vaporeon, 12);
            model.SetMaxLink(PokemonId.Pikachu, 56);

            byte[] expected = new byte[]
            {
                0x4B, 0x0C, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x38,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00,
                0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
            };

            Assert.Equal(model.Data, expected);
        }

    }
}
