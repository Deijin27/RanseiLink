// This file is automatically generated

#nullable enable

using RanseiLink.Core.Enums;
using RanseiLink.Core.Graphics;
using RanseiLink.Core.Models;

namespace RanseiLink.Console;

public static partial class RenderExtensions
{
    public static void Render(this IConsole console, Ability model, AbilityId id)
    {
        console.WriteTitle(id.ToString());
        console.WriteProperty("Name", model.Name);
        console.WriteProperty("Effect1Amount", model.Effect1Amount);
        console.WriteProperty("Effect1", model.Effect1);
        console.WriteProperty("Effect2", model.Effect2);
        console.WriteProperty("Effect2Amount", model.Effect2Amount);
    }
    public static void Render(this IConsole console, BaseWarrior model, WarriorId id)
    {
        console.WriteTitle(id.ToString());
        console.WriteProperty("Sprite", model.Sprite);
        console.WriteProperty("SpeakerId", model.SpeakerId);
        console.WriteProperty("Gender", model.Gender);
        console.WriteProperty("Name", model.Name);
        console.WriteProperty("Speciality1", model.Speciality1);
        console.WriteProperty("Speciality2", model.Speciality2);
        console.WriteProperty("Weakness1", model.Weakness1);
        console.WriteProperty("Weakness2", model.Weakness2);
        console.WriteProperty("Skill", model.Skill);
        console.WriteProperty("Power", model.Power);
        console.WriteProperty("Wisdom", model.Wisdom);
        console.WriteProperty("Charisma", model.Charisma);
        console.WriteProperty("Capacity", model.Capacity);
        console.WriteProperty("RankUpCondition1", model.RankUpCondition1);
        console.WriteProperty("RankUpCondition2", model.RankUpCondition2);
        console.WriteProperty("Quantity1ForRankUpCondition", model.Quantity1ForRankUpCondition);
        console.WriteProperty("Quantity2ForRankUpCondition", model.Quantity2ForRankUpCondition);
        console.WriteProperty("RankUp", model.RankUp);
        console.WriteProperty("RankUpPokemon1", model.RankUpPokemon1);
        console.WriteProperty("RankUpPokemon2", model.RankUpPokemon2);
        console.WriteProperty("RankUpLink", model.RankUpLink);
    }
    public static void Render(this IConsole console, BattleConfig model, BattleConfigId id)
    {
        console.WriteTitle(id.ToString());
        console.WriteProperty("Map", model.Map);
        console.WriteProperty("MapVariant", model.MapVariant);
        console.WriteProperty("Minimap", model.Minimap);
        console.WriteProperty("MinimapVariant", model.MinimapVariant);
        console.WriteProperty("Unknown", model.Unknown);
        console.WriteProperty("UpperAtmosphereColor", model.UpperAtmosphereColor);
        console.WriteProperty("MiddleAtmosphereColor", model.MiddleAtmosphereColor);
        console.WriteProperty("LowerAtmosphereColor", model.LowerAtmosphereColor);
        console.WriteProperty("VictoryCondition", model.VictoryCondition);
        console.WriteProperty("DefeatCondition", model.DefeatCondition);
        console.WriteProperty("NumberOfTurns", model.NumberOfTurns);
        console.WriteProperty("Treasure1", model.Treasure1);
        console.WriteProperty("Treasure2", model.Treasure2);
        console.WriteProperty("Treasure3", model.Treasure3);
        console.WriteProperty("Treasure4", model.Treasure4);
        console.WriteProperty("Treasure5", model.Treasure5);
        console.WriteProperty("Treasure6", model.Treasure6);
        console.WriteProperty("Treasure7", model.Treasure7);
        console.WriteProperty("Treasure8", model.Treasure8);
        console.WriteProperty("Treasure9", model.Treasure9);
        console.WriteProperty("Treasure10", model.Treasure10);
        console.WriteProperty("Treasure11", model.Treasure11);
        console.WriteProperty("Treasure12", model.Treasure12);
    }
    public static void Render(this IConsole console, Building model, BuildingId id)
    {
        console.WriteTitle(id.ToString());
        console.WriteProperty("Name", model.Name);
        console.WriteProperty("Building1", model.Building1);
        console.WriteProperty("Building2", model.Building2);
        console.WriteProperty("Building3", model.Building3);
        console.WriteProperty("Building4", model.Building4);
        console.WriteProperty("Building5", model.Building5);
        console.WriteProperty("Building6", model.Building6);
        console.WriteProperty("Building7", model.Building7);
        console.WriteProperty("Building8", model.Building8);
        console.WriteProperty("Kingdom", model.Kingdom);
        console.WriteProperty("BattleConfig1", model.BattleConfig1);
        console.WriteProperty("BattleConfig2", model.BattleConfig2);
        console.WriteProperty("BattleConfig3", model.BattleConfig3);
        console.WriteProperty("Sprite1", model.Sprite1);
        console.WriteProperty("Sprite2", model.Sprite2);
        console.WriteProperty("Sprite3", model.Sprite3);
        console.WriteProperty("Function", model.Function);
    }
    public static void Render(this IConsole console, EventSpeaker model, EventSpeakerId id)
    {
        console.WriteTitle(id.ToString());
        console.WriteProperty("Name", model.Name);
        console.WriteProperty("Sprite", model.Sprite);
    }
    public static void Render(this IConsole console, Gimmick model, GimmickId id)
    {
        console.WriteTitle(id.ToString());
        console.WriteProperty("Name", model.Name);
        console.WriteProperty("Image", model.Image);
        console.WriteProperty("AttackType", model.AttackType);
        console.WriteProperty("DestroyType", model.DestroyType);
        console.WriteProperty("State1Sprite", model.State1Sprite);
        console.WriteProperty("State2Sprite", model.State2Sprite);
        console.WriteProperty("Effect", model.Effect);
        console.WriteProperty("UnknownQuantity1", model.UnknownQuantity1);
        console.WriteProperty("Animation1", model.Animation1);
        console.WriteProperty("Animation2", model.Animation2);
        console.WriteProperty("Range", model.Range);
    }
    public static void Render(this IConsole console, Move model, MoveId id)
    {
        console.WriteTitle(id.ToString());
        console.WriteProperty("Name", model.Name);
        console.WriteProperty("MovementFlags", model.MovementFlags);
        console.WriteProperty("Type", model.Type);
        console.WriteProperty("Power", model.Power);
        console.WriteProperty("Effect1", model.Effect1);
        console.WriteProperty("Effect1Chance", model.Effect1Chance);
        console.WriteProperty("Range", model.Range);
        console.WriteProperty("Effect2", model.Effect2);
        console.WriteProperty("Effect2Chance", model.Effect2Chance);
        console.WriteProperty("Effect3", model.Effect3);
        console.WriteProperty("Effect3Chance", model.Effect3Chance);
        console.WriteProperty("Effect4", model.Effect4);
        console.WriteProperty("Effect4Chance", model.Effect4Chance);
        console.WriteProperty("Accuracy", model.Accuracy);
        console.WriteProperty("StartupAnimation", model.StartupAnimation);
        console.WriteProperty("ProjectileAnimation", model.ProjectileAnimation);
        console.WriteProperty("ImpactAnimation", model.ImpactAnimation);
        console.WriteProperty("AdditionalAnimation", model.AdditionalAnimation);
        console.WriteProperty("UnknownOption", model.UnknownOption);
        console.WriteProperty("Movement", model.Movement);
        console.WriteProperty("MovementAnimation", model.MovementAnimation);
        console.WriteProperty("UnknownValue_6_28_4", model.UnknownValue_6_28_4);
    }
    public static void Render(this IConsole console, WarriorSkill model, WarriorSkillId id)
    {
        console.WriteTitle(id.ToString());
        console.WriteProperty("Name", model.Name);
        console.WriteProperty("Effect1Amount", model.Effect1Amount);
        console.WriteProperty("Effect1", model.Effect1);
        console.WriteProperty("Effect2", model.Effect2);
        console.WriteProperty("Effect2Amount", model.Effect2Amount);
        console.WriteProperty("Effect3", model.Effect3);
        console.WriteProperty("Duration", model.Duration);
        console.WriteProperty("Effect3Amount", model.Effect3Amount);
        console.WriteProperty("Target", model.Target);
        console.WriteProperty("Animation", model.Animation);
    }
}
