// This file is automatically generated

#nullable enable

using RanseiLink.Core.Enums;
using RanseiLink.Core.Graphics;
using RanseiLink.Core.Models;
using RanseiLink.Core.Services;
using System.Collections.ObjectModel;

namespace RanseiLink.GuiCore.ViewModels;

public partial class MoveViewModel : ViewModelBase
{
    private Move _model = new();
    private MoveId _id;
    public int Id => (int)_id;


    public int Name_MaxLength => _model.Name_MaxLength;
    public string Name
    {
        get => _model.Name;
        set => SetProperty(_model.Name, value, v => _model.Name = v);
    }

    public MoveMovementFlags MovementFlags
    {
        get => _model.MovementFlags;
        set => SetProperty(_model.MovementFlags, value, v => _model.MovementFlags = v);
    }

    public TypeId Type
    {
        get => _model.Type;
        set => SetProperty(_model.Type, value, v => _model.Type = v);
    }

    public int Power_Max => 255;
    public int Power
    {
        get => _model.Power;
        set => SetProperty(_model.Power, value, v => _model.Power = v);
    }

    public MoveEffectId Effect1
    {
        get => _model.Effect1;
        set => SetProperty(_model.Effect1, value, v => _model.Effect1 = v);
    }

    public int Effect1Chance_Max => 127;
    public int Effect1Chance
    {
        get => _model.Effect1Chance;
        set => SetProperty(_model.Effect1Chance, value, v => _model.Effect1Chance = v);
    }

    public int Range
    {
        get => (int)_model.Range;
        set => SetProperty(_model.Range, (MoveRangeId)value, v => _model.Range = v);
    }

    public MoveEffectId Effect2
    {
        get => _model.Effect2;
        set => SetProperty(_model.Effect2, value, v => _model.Effect2 = v);
    }

    public int Effect2Chance_Max => 127;
    public int Effect2Chance
    {
        get => _model.Effect2Chance;
        set => SetProperty(_model.Effect2Chance, value, v => _model.Effect2Chance = v);
    }

    public MoveEffectId Effect3
    {
        get => _model.Effect3;
        set => SetProperty(_model.Effect3, value, v => _model.Effect3 = v);
    }

    public int Effect3Chance_Max => 127;
    public int Effect3Chance
    {
        get => _model.Effect3Chance;
        set => SetProperty(_model.Effect3Chance, value, v => _model.Effect3Chance = v);
    }

    public MoveEffectId Effect4
    {
        get => _model.Effect4;
        set => SetProperty(_model.Effect4, value, v => _model.Effect4 = v);
    }

    public int Effect4Chance_Max => 127;
    public int Effect4Chance
    {
        get => _model.Effect4Chance;
        set => SetProperty(_model.Effect4Chance, value, v => _model.Effect4Chance = v);
    }

    public int Accuracy_Max => 127;
    public int Accuracy
    {
        get => _model.Accuracy;
        set => SetProperty(_model.Accuracy, value, v => _model.Accuracy = v);
    }

    public int StartupAnimation
    {
        get => (int)_model.StartupAnimation;
        set => SetProperty(_model.StartupAnimation, (MoveAnimationId)value, v => _model.StartupAnimation = v);
    }

    public int ProjectileAnimation
    {
        get => (int)_model.ProjectileAnimation;
        set => SetProperty(_model.ProjectileAnimation, (MoveAnimationId)value, v => _model.ProjectileAnimation = v);
    }

    public int ImpactAnimation
    {
        get => (int)_model.ImpactAnimation;
        set => SetProperty(_model.ImpactAnimation, (MoveAnimationId)value, v => _model.ImpactAnimation = v);
    }

    public int AdditionalAnimation
    {
        get => (int)_model.AdditionalAnimation;
        set => SetProperty(_model.AdditionalAnimation, (MoveAnimationId)value, v => _model.AdditionalAnimation = v);
    }

    public MoveUnknownOptionId UnknownOption
    {
        get => _model.UnknownOption;
        set => SetProperty(_model.UnknownOption, value, v => _model.UnknownOption = v);
    }

    public MoveMovementId Movement
    {
        get => _model.Movement;
        set => SetProperty(_model.Movement, value, v => _model.Movement = v);
    }

    public MoveMovementAnimationId MovementAnimation
    {
        get => _model.MovementAnimation;
        set => SetProperty(_model.MovementAnimation, value, v => _model.MovementAnimation = v);
    }

    public MoveMovementAnimationTimingId MovementTiming
    {
        get => _model.MovementTiming;
        set => SetProperty(_model.MovementTiming, value, v => _model.MovementTiming = v);
    }

    public string Description
    {
        get => _msgService.GetMsgOfType(MsgShortcut.MoveDescription, Id);
        set
        {
            _msgService.SetMsgOfType(MsgShortcut.MoveDescription, Id, value);
            RaisePropertyChanged();
        }
    }

    public List<SelectorComboBoxItem> MoveRangeItems { get; }

    public List<SelectorComboBoxItem> MoveAnimationItems { get; }
}