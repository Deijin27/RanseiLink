// This file is automatically generated

#nullable enable

using RanseiLink.Core.Enums;
using RanseiLink.Core.Graphics;
using RanseiLink.Core.Models;

namespace RanseiLink.GuiCore.ViewModels;

public partial class BattleConfigViewModel : ViewModelBase
{
    private BattleConfig _model = new();

    public int Map
    {
        get => _model.Map;
        set => SetProperty(_model.Map, value, v => _model.Map = v);
    }

    public int MapVariant
    {
        get => _model.MapVariant;
        set => SetProperty(_model.MapVariant, value, v => _model.MapVariant = v);
    }

    public int Minimap
    {
        get => _model.Minimap;
        set => SetProperty(_model.Minimap, value, v => _model.Minimap = v);
    }

    public int MinimapVariant
    {
        get => _model.MinimapVariant;
        set => SetProperty(_model.MinimapVariant, value, v => _model.MinimapVariant = v);
    }

    public int Unknown
    {
        get => _model.Unknown;
        set => SetProperty(_model.Unknown, value, v => _model.Unknown = v);
    }

    public Rgb15 UpperAtmosphereColor
    {
        get => _model.UpperAtmosphereColor;
        set => SetProperty(_model.UpperAtmosphereColor, value, v => _model.UpperAtmosphereColor = v);
    }

    public Rgb15 MiddleAtmosphereColor
    {
        get => _model.MiddleAtmosphereColor;
        set => SetProperty(_model.MiddleAtmosphereColor, value, v => _model.MiddleAtmosphereColor = v);
    }

    public Rgb15 LowerAtmosphereColor
    {
        get => _model.LowerAtmosphereColor;
        set => SetProperty(_model.LowerAtmosphereColor, value, v => _model.LowerAtmosphereColor = v);
    }

    public BattleVictoryConditionFlags VictoryCondition
    {
        get => _model.VictoryCondition;
        set => SetProperty(_model.VictoryCondition, value, v => _model.VictoryCondition = v);
    }

    public BattleVictoryConditionFlags DefeatCondition
    {
        get => _model.DefeatCondition;
        set => SetProperty(_model.DefeatCondition, value, v => _model.DefeatCondition = v);
    }

    public int NumberOfTurns
    {
        get => _model.NumberOfTurns;
        set => SetProperty(_model.NumberOfTurns, value, v => _model.NumberOfTurns = v);
    }
}