<UserControl x:Class="RanseiLink.Windows.Views.MoveView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             d:Background="{DynamicResource WindowBackgroundBrush}"
             xmlns:vm="clr-namespace:RanseiLink.GuiCore.ViewModels;assembly=RanseiLink.GuiCore"
             xmlns:gif="http://wpfanimatedgif.codeplex.com"
             xmlns:const="clr-namespace:RanseiLink.GuiCore.Constants;assembly=RanseiLink.GuiCore"
             xmlns:controls="clr-namespace:RanseiLink.Windows.Controls"
             xmlns:valueConverters="clr-namespace:RanseiLink.Windows.ValueConverters"
             xmlns:local="clr-namespace:RanseiLink.Windows.Views"
             d:DataContext="{d:DesignInstance Type=vm:MoveViewModel, IsDesignTimeCreatable=False}"
             mc:Ignorable="d" 
             d:DesignHeight="900" d:DesignWidth="800">
    <UserControl.Resources>

        <Style TargetType="TextBlock" BasedOn="{StaticResource {x:Type TextBlock}}">
            <Setter Property="Height" Value="20"/>
        </Style>
        <Style TargetType="TextBox" BasedOn="{StaticResource {x:Type TextBox}}">
            <Setter Property="Height" Value="20"/>
        </Style>
        <Style TargetType="ComboBox" BasedOn="{StaticResource {x:Type ComboBox}}">
            <Setter Property="Height" Value="20"/>
        </Style>

    </UserControl.Resources>
    <WrapPanel>
        <Grid Margin="10">
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="130"/>
                <ColumnDefinition Width="170"/>
            </Grid.ColumnDefinitions>
            <Grid.RowDefinitions>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
                <RowDefinition Height="30"/>
            </Grid.RowDefinitions>

            <Image Margin="0,4,0,12" Source="{Binding PreviewImage}" RenderOptions.BitmapScalingMode="NearestNeighbor" Stretch="Uniform" Grid.ColumnSpan="2" Grid.RowSpan="2"/>

            <TextBlock Text="Name" Grid.Row="2" />
            <TextBox Grid.Row="2" Grid.Column="1" Text="{Binding Name, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" 
                     MaxLength="{Binding Name_MaxLength}"/>

            <GroupBox Header="Movement Flags" Grid.Row="3" Grid.ColumnSpan="2" Grid.RowSpan="5" Padding="10,10,10,0">
                <StackPanel>
                    <CheckBox Content="Display Movement/Knockback in Preview" IsChecked="{Binding MovementFlag_MovementOrKnockback, Mode=TwoWay}" Margin="0,0,0,13"/>
                    <CheckBox Content="Invert Movement Direction" IsChecked="{Binding MovementFlag_InvertMovementDirection, Mode=TwoWay}" Margin="0,0,0,13"/>
                    <CheckBox Content="Double Movement Distance" IsChecked="{Binding MovementFlag_DoubleMovementDistance, Mode=TwoWay}" />
                    <DockPanel Margin="0,11,0,0" >
                        <TextBlock DockPanel.Dock="Left" Text="Movement" Margin="0,0,15,0" />
                        <ComboBox ItemsSource="{x:Static const:EnumProvider.MoveMovementItems}" SelectedItem="{Binding Movement, Mode=TwoWay}"/>
                    </DockPanel>
                </StackPanel>
            </GroupBox>

            <TextBlock Text="Type" Grid.Row="8"/>
            <ComboBox Grid.Row="8" Grid.Column="1" ItemsSource="{x:Static const:EnumProvider.TypeItems}" SelectedItem="{Binding Type, Mode=TwoWay}"/>

            <TextBlock Text="Power" Grid.Row="9" />
            <controls:NumberBox Grid.Row="9" Grid.Column="1" Value="{Binding Power}" Max="{Binding Power_Max}"/>

            <TextBlock Text="Accuracy" Grid.Row="10" />
            <controls:NumberBox Grid.Row="10" Grid.Column="1" Value="{Binding Accuracy}" Max="{Binding Accuracy_Max}"/>

            <Button Style="{StaticResource HyperlinkButtonStyle}" Content="Range" Grid.Row="11" ToolTip="Jump to selected move range" 
                    Command="{Binding JumpToMoveRangeCommand}" CommandParameter="{Binding Range}"/>
            <ComboBox Grid.Row="11" Grid.Column="1" ItemsSource="{Binding MoveRangeItems}" SelectedValue="{Binding Range, Mode=TwoWay}"
                      Style="{StaticResource SelectorComboBoxStyle}"/>

            <TextBlock Text="Effect 1" Grid.Row="12"/>
            <ComboBox Grid.Row="12" Grid.Column="1" ItemsSource="{x:Static const:EnumProvider.MoveEffectItems}" SelectedItem="{Binding Effect1, Mode=TwoWay}"/>

            <TextBlock Grid.Row="13" Grid.Column="0" Text="{Binding Effect1, Mode=OneWay, Converter={StaticResource Converter.MoveEffectIdToQuantityName}}" />
            <controls:NumberBox Grid.Row="13" Grid.Column="1" Value="{Binding Effect1Chance, Mode=TwoWay}" Max="{Binding Effect1Chance_Max}"/>

            <TextBlock Text="Effect 2" Grid.Row="14"/>
            <ComboBox Grid.Row="14" Grid.Column="1" ItemsSource="{x:Static const:EnumProvider.MoveEffectItems}" SelectedItem="{Binding Effect2, Mode=TwoWay}"/>

            <TextBlock Grid.Row="15" Grid.Column="0" Text="{Binding Effect2, Mode=OneWay, Converter={StaticResource Converter.MoveEffectIdToQuantityName}}" />
            <controls:NumberBox Grid.Row="15" Grid.Column="1" Value="{Binding Effect2Chance, Mode=TwoWay}" Max="{Binding Effect2Chance_Max}"/>

            <TextBlock Text="Rank 5 Effect 1" Grid.Row="16"/>
            <ComboBox Grid.Row="16" Grid.Column="1" ItemsSource="{x:Static const:EnumProvider.MoveEffectItems}" SelectedItem="{Binding Effect3, Mode=TwoWay}"/>

            <TextBlock Grid.Row="17" Grid.Column="0" Text="{Binding Effect3, Mode=OneWay, Converter={StaticResource Converter.MoveEffectIdToQuantityName}}" />
            <controls:NumberBox Grid.Row="17" Grid.Column="1" Value="{Binding Effect3Chance, Mode=TwoWay}" Max="{Binding Effect3Chance_Max}"/>

            <TextBlock Text="Rank 5 Effect 2" Grid.Row="18"/>
            <ComboBox Grid.Row="18" Grid.Column="1" ItemsSource="{x:Static const:EnumProvider.MoveEffectItems}" SelectedItem="{Binding Effect4, Mode=TwoWay}"/>

            <TextBlock Grid.Row="19" Grid.Column="0" Text="{Binding Effect4, Mode=OneWay, Converter={StaticResource Converter.MoveEffectIdToQuantityName}}" />
            <controls:NumberBox Grid.Row="19" Grid.Column="1" Value="{Binding Effect4Chance, Mode=TwoWay}" Max="{Binding Effect4Chance_Max}"/>

            
            <TextBlock Grid.Row="20" Grid.Column="0" Text="Unknown Option" />
            <ComboBox Grid.Row="20" Grid.Column="1" ItemsSource="{x:Static const:EnumProvider.MoveUnknownOptionItems}" SelectedItem="{Binding UnknownOption, Mode=TwoWay}"/>

            

            <GroupBox Header="Description" Grid.Row="21" Grid.RowSpan="4" Grid.ColumnSpan="2">
                <TextBox Text="{Binding Description}" Height="Auto" TextWrapping="Wrap" AcceptsReturn="True"/>
            </GroupBox>

        </Grid>
        <TabControl Margin="10">
            <TabItem Header="Pokemon">
                <ItemsControl VerticalAlignment="Top" Width="300" Height="400" Margin="10" ItemsSource="{Binding PokemonWithMove}" Style="{StaticResource ItemsControlVirtualizedStyle}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <local:PokemonMiniView Margin="2" Width="163" />
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>

            </TabItem>
            <TabItem Header="Animation / Sound">
                <Grid Margin="10">
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="130"/>
                        <ColumnDefinition Width="170"/>
                    </Grid.ColumnDefinitions>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                        <RowDefinition Height="30"/>
                    </Grid.RowDefinitions>

                    <TextBlock Text="Movement" Grid.Row="0" Grid.Column="0" ToolTip="Movement animation of the pokemon when preparing to attack"/>

                    <DockPanel Grid.Row="0" Grid.Column="1">
                        <controls:IconButton DockPanel.Dock="Right" Icon="visibility" Margin="5,0,0,0" Command="{Binding SetPreviewAnimationModeCommand}" CommandParameter="{x:Static vm:MoveAnimationPreviewMode.Movement}"/>
                        <ComboBox  ItemsSource="{x:Static const:EnumProvider.MoveMovementAnimationItems}" SelectedItem="{Binding MovementAnimation}"/>
                    </DockPanel>

                    <TextBlock Grid.Row="1" Grid.Column="0" Text="Movement Timing" />
                    <ComboBox Grid.Row="1" Grid.Column="1" ItemsSource="{x:Static const:EnumProvider.MovementAnimationTimingItems}" 
                              SelectedItem="{Binding MovementTiming}" />

                    <TextBlock Grid.Row="2" Grid.Column="0" Text="Startup"/>
                    <DockPanel Grid.Row="2" Grid.Column="1">
                        <controls:IconButton DockPanel.Dock="Right" Icon="visibility" Margin="5,0,0,0" Command="{Binding SetPreviewAnimationModeCommand}" CommandParameter="{x:Static vm:MoveAnimationPreviewMode.Startup}"/>
                        <ComboBox ItemsSource="{Binding MoveAnimationItems}" SelectedValue="{Binding StartupAnimation}"
                                  Style="{StaticResource SelectorComboBoxStyle}"/>
                    </DockPanel>


                    <TextBlock Grid.Row="3" Grid.Column="0" Text="Projectile"/>
                    <DockPanel Grid.Row="3" Grid.Column="1">
                        <controls:IconButton DockPanel.Dock="Right" Icon="visibility" Margin="5,0,0,0" Command="{Binding SetPreviewAnimationModeCommand}" CommandParameter="{x:Static vm:MoveAnimationPreviewMode.Projectile}"/>
                        <ComboBox ItemsSource="{Binding MoveAnimationItems}" SelectedValue="{Binding ProjectileAnimation}"
                                  Style="{StaticResource SelectorComboBoxStyle}"/>
                    </DockPanel>


                    <TextBlock Grid.Row="4" Grid.Column="0" Text="Impact"/>
                    <DockPanel Grid.Row="4" Grid.Column="1">
                        <controls:IconButton DockPanel.Dock="Right" Icon="visibility" Margin="5,0,0,0" Command="{Binding SetPreviewAnimationModeCommand}" CommandParameter="{x:Static vm:MoveAnimationPreviewMode.Impact}"/>
                        <ComboBox ItemsSource="{Binding MoveAnimationItems}" SelectedValue="{Binding ImpactAnimation}"
                                  Style="{StaticResource SelectorComboBoxStyle}"/>
                    </DockPanel>

                    <TextBlock Grid.Row="5" Grid.Column="0" Text="Additional"/>
                    <DockPanel Grid.Row="5" Grid.Column="1">
                        <controls:IconButton DockPanel.Dock="Right" Icon="visibility" Margin="5,0,0,0" Command="{Binding SetPreviewAnimationModeCommand}" CommandParameter="{x:Static vm:MoveAnimationPreviewMode.Additional}"/>
                        <ComboBox ItemsSource="{Binding MoveAnimationItems}" SelectedValue="{Binding AdditionalAnimation}"
                                  Style="{StaticResource SelectorComboBoxStyle}"/>
                    </DockPanel>

                    <CheckBox Grid.Row="6" Grid.ColumnSpan="2" IsChecked="{Binding EnableAdditionalAnimation}" Content="Unknown Additional-related toggle"
                              ToolTip="It always seems to be enabled if theres an additional anim, but can't tell what it does from testing"/>

                    <GroupBox Grid.Row="7" Grid.Column="0" Grid.ColumnSpan="2" Grid.RowSpan="9" Header="Animation Preview" Padding="5">
                        <DockPanel>
                            <TextBlock DockPanel.Dock="Top" FontSize="10" Text="{Binding CurrentPreviewAnimationName, StringFormat='Previewing {0}'}"/>
                            <Grid>
                                <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center">Requires Internet Connection</TextBlock>
                                <Image Width="270" Stretch="Uniform" VerticalAlignment="Center" HorizontalAlignment="Center" 
                       gif:ImageBehavior.AnimatedSource="{Binding CurrentPreviewAnimationUri}" />
                            </Grid>

                        </DockPanel>
                    </GroupBox>
                </Grid>
            </TabItem>
        </TabControl>
        
    </WrapPanel>
</UserControl>
