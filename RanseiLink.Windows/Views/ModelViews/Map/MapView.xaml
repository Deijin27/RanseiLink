<UserControl x:Class="RanseiLink.Windows.Views.MapView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             d:Background="{DynamicResource WindowBackgroundBrush}"
             xmlns:vm="clr-namespace:RanseiLink.GuiCore.ViewModels;assembly=RanseiLink.GuiCore"
             xmlns:controls="clr-namespace:RanseiLink.Windows.Controls"
             d:Foreground="{DynamicResource ForegroundBrush}"
             xmlns:b="clr-namespace:RanseiLink.Windows.Behaviours"
             xmlns:const="clr-namespace:RanseiLink.GuiCore.Constants;assembly=RanseiLink.GuiCore"
             xmlns:vc="clr-namespace:RanseiLink.Windows.ValueConverters"
             d:DataContext="{d:DesignInstance Type=vm:MapViewModel, IsDesignTimeCreatable=False}"
             mc:Ignorable="d" 
             d:DesignHeight="680" d:DesignWidth="800">
    <UserControl.Resources>

        <DrawingBrush x:Key="Checkerboard" TileMode="Tile" Viewport="0,0,32,32" ViewportUnits="Absolute">
            <DrawingBrush.Drawing>
                <GeometryDrawing Geometry="M0,0 H1 V1 H2 V2 H1 V1 H0Z" Brush="#212024"/>
            </DrawingBrush.Drawing>
        </DrawingBrush>

        <DataTemplate DataType="{x:Type vm:TerrainMapPainter}">
            <ListBox ItemsSource="{Binding Brushes}" SelectedItem="{Binding SelectedBrush}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Width="140" Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition Width="Auto"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" BorderThickness="1" 
                                BorderBrush="{DynamicResource ControlBorderBrush}" 
                                Background="{Binding Color, Converter={StaticResource Converter.ImageSharpColorToBrush}}"/>
                            <Image Grid.Column="1" Margin="2" Source="{Binding Image}"/>
                            <TextBlock Grid.Column="2" Text="{Binding Name}" VerticalAlignment="Center" Margin="8,0,0,0"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:BoundsMapPainter}">
            <ListBox ItemsSource="{Binding Brushes}" SelectedItem="{Binding SelectedBrush}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Width="140" Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" BorderThickness="1" 
                        BorderBrush="{DynamicResource ControlBorderBrush}" 
                        Background="{Binding Color, Converter={StaticResource Converter.ImageSharpColorToBrush}}"/>
                            <TextBlock Grid.Column="2" Text="{Binding Name}" VerticalAlignment="Center" Margin="8,0,0,0"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:ElevationMapPainter}">
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition/>
                </Grid.ColumnDefinitions>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>
                <TextBlock Margin="0,0,5,0" VerticalAlignment="Center">Mode:</TextBlock>
                <ListBox Grid.Column="1" ItemsSource="{Binding Modes}" SelectedItem="{Binding SelectedMode}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Width="60">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <controls:IconControl Icon="{Binding Icon}"/>
                                    <TextBlock Margin="5,0,0,0" Text="{Binding Name}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </StackPanel>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>
                <ListBox Margin="0,5,0,0" Grid.Row="1" Grid.ColumnSpan="2" ItemsSource="{Binding Brushes}" SelectedItem="{Binding SelectedBrush}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <WrapPanel/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Width="140" Margin="2">
                                <Grid.ColumnDefinitions>
                                    <ColumnDefinition Width="20"/>
                                    <ColumnDefinition/>
                                </Grid.ColumnDefinitions>
                                <Border Grid.Column="0" BorderThickness="1"
                                BorderBrush="{DynamicResource ControlBorderBrush}" 
                                Background="{Binding Color, Converter={StaticResource Converter.ImageSharpColorToBrush}}"/>
                                <TextBox Width="80" Grid.Column="2" Text="{Binding Value, UpdateSourceTrigger=PropertyChanged}" VerticalAlignment="Center" Margin="8,2"/>
                            </Grid>
                        </DataTemplate>
                    </ListBox.ItemTemplate>
                </ListBox>
            </Grid>
        </DataTemplate>
        <DataTemplate DataType="{x:Type vm:OrientationMapPainter}">
            <ListBox ItemsSource="{Binding Brushes}" SelectedItem="{Binding SelectedBrush}" ScrollViewer.HorizontalScrollBarVisibility="Disabled">
                <ListBox.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ListBox.ItemsPanel>
                <ListBox.ItemTemplate>
                    <DataTemplate>
                        <Grid Width="140" Margin="2">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="20"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <Border Grid.Column="0" BorderThickness="1" 
                BorderBrush="{DynamicResource ControlBorderBrush}" 
                Background="{Binding ColorBg, Converter={StaticResource Converter.ImageSharpColorToBrush}}"/>
                            <TextBlock Grid.Column="2" Text="{Binding Name}" VerticalAlignment="Center" Margin="8,0,0,0"/>
                        </Grid>
                    </DataTemplate>
                </ListBox.ItemTemplate>
            </ListBox>
        </DataTemplate>
    </UserControl.Resources>
    <DockPanel Margin="0,10,0,0">

        <DockPanel Margin="0" DockPanel.Dock="Left" >
            <Border CornerRadius="4,4,0,0" DockPanel.Dock="Top" BorderThickness="1" BorderBrush="{DynamicResource ControlBorderBrush}" Background="{DynamicResource WindowTransparentBackgroundBrush}" DataContext="{Binding MouseOverItem}" Padding="2">
                <UniformGrid Columns="2">
                    <UniformGrid.Resources>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="FontSize" Value="10"/>
                            <Setter Property="FontWeight" Value="DemiBold"/>
                        </Style>
                    </UniformGrid.Resources>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Width="36" d:Text="X: 100" Text="{Binding Parent.X, StringFormat='X: {0}'}"/>
                        <TextBlock Width="36" d:Text="Y: 100" Text="{Binding Parent.Y, StringFormat='Y: {0}'}"/>
                        <TextBlock Width="36" d:Text="Z: 400" Text="{Binding Z, StringFormat='Z: {0}'}"/>
                    </StackPanel>


                    <StackPanel Orientation="Horizontal">
                        <TextBlock VerticalAlignment="Center" Text="Terrain:" />
                        <Border VerticalAlignment="Center" Margin="5,0" CornerRadius="2" d:Background="Blue" Width="10" Height="10" Background="{Binding Parent.Terrain, Converter={StaticResource Converter.TerrainToBrush}}"/>
                        <TextBlock VerticalAlignment="Center"  d:Text="Poison" Text="{Binding Parent.Terrain}"/>
                    </StackPanel>
                    <TextBlock d:Text="Gimmick: HotSpring" Text="{Binding Parent.GimmicksString, StringFormat='Gimmick: {0}'}"/>
                    <TextBlock d:Text="Bounds: InBounds" Text="{Binding Parent.Bounds, StringFormat='Bounds: {0}'}"/>
                    <TextBlock d:Text="Unknown4: 5" Text="{Binding Parent.Unknown4, StringFormat='Unknown4: {0}'}"/>
                    <TextBlock d:Text="Orientation: North" Text="{Binding Parent.Orientation, StringFormat='Orientation: {0}'}"/>
                </UniformGrid>
            </Border>

            <Border Margin="0,-1,0,0" Background="{StaticResource Checkerboard}" BorderThickness="1" BorderBrush="{DynamicResource ControlBorderBrush}">
                <ItemsControl Margin="20" x:Name="MatrixElement" d:Width="300" Background="gray" HorizontalAlignment="Left" VerticalAlignment="Top" ItemsSource="{Binding Matrix}">
                    <ItemsControl.ItemTemplate>
                        <DataTemplate>
                            <ItemsControl ItemsSource="{Binding}">
                                <ItemsControl.ItemsPanel>
                                    <ItemsPanelTemplate>
                                        <StackPanel Orientation="Horizontal"/>
                                    </ItemsPanelTemplate>
                                </ItemsControl.ItemsPanel>
                                <ItemsControl.ItemTemplate>
                                    <DataTemplate DataType="{x:Type vm:MapGridCellViewModel}">
                                        <Border x:Name="GridCellBorder" Width="27" Height="27" Background="{Binding Color, Converter={StaticResource Converter.ImageSharpColorToBrush}}">
                                            <Border.Style>
                                                <Style TargetType="Border">
                                                    <Setter Property="BorderBrush" Value="Gray"/>
                                                    <Setter Property="BorderThickness" Value="0.5"/>
                                                    <Style.Triggers>
                                                        <Trigger Property="IsMouseOver" Value="True">
                                                            <Setter Property="BorderBrush" Value="Cyan"/>
                                                            <Setter Property="BorderThickness" Value="2"/>
                                                        </Trigger>
                                                        <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                            <Setter Property="BorderBrush" Value="Goldenrod"/>
                                                            <Setter Property="BorderThickness" Value="2"/>
                                                        </DataTrigger>
                                                    </Style.Triggers>
                                                </Style>
                                            </Border.Style>
                                            <Grid>
                                                <Grid.ColumnDefinitions>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                    <ColumnDefinition/>
                                                </Grid.ColumnDefinitions>
                                                <Grid.RowDefinitions>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                    <RowDefinition/>
                                                </Grid.RowDefinitions>
                                                <!-- Z mouse enter trigger zones-->
                                                <Rectangle DataContext="{Binding SubCell0}" Fill="{Binding Color, Converter={StaticResource Converter.ImageSharpColorToBrush}}" Grid.Row="0" Grid.Column="0" MouseEnter="Rectangle_MouseEnter" MouseLeave="Rectangle_MouseLeave" MouseDown="Rectangle_MouseDown"/>
                                                <Rectangle DataContext="{Binding SubCell1}" Fill="{Binding Color, Converter={StaticResource Converter.ImageSharpColorToBrush}}" Grid.Row="0" Grid.Column="1" MouseEnter="Rectangle_MouseEnter" MouseLeave="Rectangle_MouseLeave" MouseDown="Rectangle_MouseDown"/>
                                                <Rectangle DataContext="{Binding SubCell2}" Fill="{Binding Color, Converter={StaticResource Converter.ImageSharpColorToBrush}}" Grid.Row="0" Grid.Column="2" MouseEnter="Rectangle_MouseEnter" MouseLeave="Rectangle_MouseLeave" MouseDown="Rectangle_MouseDown"/>
                                                <Rectangle DataContext="{Binding SubCell3}" Fill="{Binding Color, Converter={StaticResource Converter.ImageSharpColorToBrush}}" Grid.Row="1" Grid.Column="0" MouseEnter="Rectangle_MouseEnter" MouseLeave="Rectangle_MouseLeave" MouseDown="Rectangle_MouseDown"/>
                                                <Rectangle DataContext="{Binding SubCell4}" Fill="{Binding Color, Converter={StaticResource Converter.ImageSharpColorToBrush}}" Grid.Row="1" Grid.Column="1" MouseEnter="Rectangle_MouseEnter" MouseLeave="Rectangle_MouseLeave" MouseDown="Rectangle_MouseDown"/>
                                                <Rectangle DataContext="{Binding SubCell5}" Fill="{Binding Color, Converter={StaticResource Converter.ImageSharpColorToBrush}}" Grid.Row="1" Grid.Column="2" MouseEnter="Rectangle_MouseEnter" MouseLeave="Rectangle_MouseLeave" MouseDown="Rectangle_MouseDown"/>
                                                <Rectangle DataContext="{Binding SubCell6}" Fill="{Binding Color, Converter={StaticResource Converter.ImageSharpColorToBrush}}" Grid.Row="2" Grid.Column="0" MouseEnter="Rectangle_MouseEnter" MouseLeave="Rectangle_MouseLeave" MouseDown="Rectangle_MouseDown"/>
                                                <Rectangle DataContext="{Binding SubCell7}" Fill="{Binding Color, Converter={StaticResource Converter.ImageSharpColorToBrush}}" Grid.Row="2" Grid.Column="1" MouseEnter="Rectangle_MouseEnter" MouseLeave="Rectangle_MouseLeave" MouseDown="Rectangle_MouseDown"/>
                                                <Rectangle DataContext="{Binding SubCell8}" Fill="{Binding Color, Converter={StaticResource Converter.ImageSharpColorToBrush}}" Grid.Row="2" Grid.Column="2" MouseEnter="Rectangle_MouseEnter" MouseLeave="Rectangle_MouseLeave" MouseDown="Rectangle_MouseDown"/>
                                                <!-- Gimmick and pokemon markers -->
                                                <Border Grid.Column="0" 
                                               Grid.Row="0" 
                                               Grid.ColumnSpan="3" 
                                               Grid.RowSpan="3" 
                                               IsHitTestVisible="False" 
                                               Background="white" 
                                               Margin="1" 
                                               Width="12" 
                                               Height="12" 
                                               HorizontalAlignment="Center" 
                                               VerticalAlignment="Center"
                                               Visibility="{Binding GimmickMarkerVisibility, Converter={StaticResource Converter.BoolToVisibility}}" 
                                               BorderBrush="black"
                                               BorderThickness="1">
                                                    <TextBlock FontWeight="Bold" HorizontalAlignment="Center" VerticalAlignment="Center" 
                                                   Foreground="black" FontSize="9" 
                                                   Text="{Binding GimmickMarkerText}"/>
                                                </Border>
                                                <Image Grid.Column="0" 
                                                   Grid.Row="0" 
                                                   Grid.ColumnSpan="3" 
                                                   Grid.RowSpan="3" 
                                                   IsHitTestVisible="False" 
                                                   Width="20" 
                                                   Height="20" 
                                                   HorizontalAlignment="Center" 
                                                   VerticalAlignment="Center" 
                                                   Stretch="Uniform"
                                                   Source="{Binding GimmickIcon}"
                                                   />
                                                <Border Grid.Column="0" 
                                                       Grid.Row="0" 
                                                       Grid.ColumnSpan="3" 
                                                       Grid.RowSpan="3" 
                                                       IsHitTestVisible="False" 
                                                       Background="Black" 
                                                       Margin="1" 
                                                       Width="12" 
                                                       Height="12" 
                                                       HorizontalAlignment="Center" 
                                                       VerticalAlignment="Center"
                                                       Visibility="{Binding PokemonMarkerVisibility, Converter={StaticResource Converter.BoolToVisibility}}" 
                                                       BorderBrush="White"
                                                       BorderThickness="1">
                                                    <TextBlock HorizontalAlignment="Center" VerticalAlignment="Center" 
                                                           Foreground="white" FontSize="9" 
                                                           Text="{Binding PokemonMarkerText}"/>
                                                </Border>
                                            </Grid>
                                        </Border>
                                    </DataTemplate>
                                </ItemsControl.ItemTemplate>
                            </ItemsControl>
                        </DataTemplate>
                    </ItemsControl.ItemTemplate>
                </ItemsControl>
            </Border>
        </DockPanel>

        <DockPanel Margin="10,0,0,0">

            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,0,0,10">
                <TextBlock Text="Mode:" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <ListBox ItemsSource="{Binding Painters}" SelectedItem="{Binding SelectedPainter}">
                    <ListBox.ItemTemplate>
                        <DataTemplate>
                            <Grid Width="100">
                                <StackPanel Orientation="Horizontal" HorizontalAlignment="Center">
                                    <controls:IconControl Icon="{Binding Icon}"/>
                                    <TextBlock Margin="5,0,0,0" Text="{Binding Name}" VerticalAlignment="Center" HorizontalAlignment="Center"/>
                                </StackPanel>
                            </Grid>

                        </DataTemplate>
                    </ListBox.ItemTemplate>
                    <ListBox.ItemsPanel>
                        <ItemsPanelTemplate>
                            <StackPanel Orientation="Horizontal"/>
                        </ItemsPanelTemplate>
                    </ListBox.ItemsPanel>
                </ListBox>

            </StackPanel>
            
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,0,0,5">
                <ToggleButton Style="{StaticResource TagToggleButtonStyle}" IsChecked="{Binding ShowGimmicks}" Content="Show Gimmicks" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <ToggleButton Style="{StaticResource TagToggleButtonStyle}" IsChecked="{Binding ShowPokemonMarkers}" Content="Show Pokemon" VerticalAlignment="Center"/>
                <TextBlock Text="Nickname" Grid.Row="0" Margin="20,0,0,0" VerticalAlignment="Center"/>
                <TextBox Text="{Binding Nickname}" Width="150" Margin="5,0,0,0"/>
            </StackPanel>
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                <TextBlock d:Text="Width: 10" Text="{Binding Width, StringFormat='Width: {0}'}"/>
                <TextBlock d:Text="Height: 10" Text="{Binding Height, StringFormat='Height: {0}'}" Margin="10,0"/>
                <controls:IconButton Icon="resize" Content="Resize" Command="{Binding ModifyMapDimensionsCommand}"/>
                <controls:IconButton Icon="visibility" Content="View 3D Model" Command="{Binding View3DModelCommand}" Margin="10,0"/>
            </StackPanel>

            <TabControl Margin="0,20,0,0" SelectedIndex="{Binding SelectedTabIndex}">
                <!-- Important, if you swap tab order, make sure to update the tap associated with Painter in the view model -->
                <TabItem Header="Selected Cell">
                    <ContentPresenter Margin="10" Content="{Binding SelectedCell}">
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate DataType="{x:Type vm:MapGridCellViewModel}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="100"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Grid.ColumnSpan="2" Orientation="Horizontal">
                                        <TextBlock Width="38" d:Text="X: 10" Text="{Binding X, StringFormat='X: {0}'}"/>
                                        <TextBlock Width="38" d:Text="Y: 10" Text="{Binding Y, StringFormat='Y: {0}'}"/>
                                    </StackPanel>

                                    <TextBlock Height="20" Grid.Row="1">Terrain</TextBlock>
                                    <ComboBox Grid.Row="1" Grid.Column="1" Height="20" SelectedItem="{Binding Terrain}" ItemsSource="{x:Static const:EnumProvider.TerrainItems}"/>
                                    <TextBlock Height="20" Grid.Row="2">Bounds</TextBlock>
                                    <ComboBox Grid.Row="2" Grid.Column="1" Height="20" SelectedItem="{Binding Bounds}" ItemsSource="{x:Static const:EnumProvider.MapBoundsItems}"/>
                                    <TextBlock Height="20" Grid.Row="3">Unknown4</TextBlock>
                                    <controls:NumberBox Grid.Row="3" Grid.Column="1" Value="{Binding Unknown4}" Max="255"/>
                                    <TextBlock Height="20" Grid.Row="4">Orientation</TextBlock>
                                    <ComboBox Grid.Row="4" Grid.Column="1" Height="20" SelectedItem="{Binding Orientation}" ItemsSource="{x:Static const:EnumProvider.OrientationAltItems}"/>
                                </Grid>
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </TabItem>
                <TabItem Header="Gimmicks" IsSelected="True">
                    <DockPanel>
                        <GroupBox Header="Selected Gimmick" DockPanel.Dock="Top">
                            <Grid>
                                <TextBlock Visibility="{Binding SelectedGimmick, Converter={StaticResource Converter.NotNullToVis.Inverse}}" 
                                           Text="No Gimmick Selected" Foreground="{DynamicResource AltForegroundBrush}" 
                                           HorizontalAlignment="Center" VerticalAlignment="Center"/>

                                <Grid Visibility="{Binding SelectedGimmick, Converter={StaticResource Converter.NotNullToVis.Hidden}}">
                                    <DockPanel DataContext="{Binding SelectedGimmick}" >
                                        <Grid DockPanel.Dock="Left" VerticalAlignment="Center" Margin="5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="22"/>
                                                <ColumnDefinition Width="22"/>
                                                <ColumnDefinition Width="22"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="22"/>
                                                <RowDefinition Height="22"/>
                                                <RowDefinition Height="22"/>
                                            </Grid.RowDefinitions>
                                            <controls:IconButton Icon="chevron_up" Command="{Binding DecrementYCommand}" Width="20" Height="20" Grid.Column="1"/>
                                            <controls:IconButton Icon="chevron_left" Command="{Binding DecrementXCommand}" Width="20" Height="20" Grid.Row="1"/>
                                            <controls:IconButton Icon="rotate_right" Command="{Binding RotateCommand}" Width="20" Height="20" Grid.Row="1" Grid.Column="1"/>
                                            <controls:IconButton Icon="chevron_right" Command="{Binding IncrementXCommand}" Width="20" Height="20" Grid.Column="2" Grid.Row="1"/>
                                            <controls:IconButton Icon="chevron_down" Command="{Binding IncrementYCommand}" Width="20" Height="20" Grid.Column="1" Grid.Row="2"/>
                                        </Grid>
                                        <Grid Margin="5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="100"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="25"/>
                                                <RowDefinition Height="25"/>
                                                <RowDefinition Height="25"/>
                                                <RowDefinition Height="25"/>
                                            </Grid.RowDefinitions>
                                            <StackPanel Orientation="Horizontal" Grid.ColumnSpan="2">
                                                <Image Source="{Binding GimmickIcon}" Width="20" Height="20" Margin="0,0,20,0"/>
                                                <TextBlock Text="{Binding X, StringFormat='X: {0}'}" d:Text="X: 10"  Width="50" VerticalAlignment="Center"/>
                                                <TextBlock Text="{Binding Y, StringFormat='Y: {0}'}" d:Text="Y: 10" Width="50" VerticalAlignment="Center"/>
                                                <TextBlock Text="{Binding Orientation, StringFormat='Orientation: {0}'}" d:Text="Orientation: 10" VerticalAlignment="Center"/>
                                            </StackPanel>
                                            <TextBlock Height="20" Text="Gimmick" Grid.Row="1"/>
                                            <ComboBox Grid.Row="1" Grid.Column="1" Height="20" SelectedValue="{Binding Gimmick, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{Binding GimmickItems}" Style="{StaticResource SelectorComboBoxStyle}"/>
                                            <TextBlock Height="20" Text="Unknown Value" Grid.Row="2"/>
                                            <controls:NumberBox Grid.Row="2" Grid.Column="1" Height="20" Value="{Binding UnknownValue, UpdateSourceTrigger=LostFocus}"/>
                                            <TextBlock Height="20" Text="Parameters" Grid.Row="3"/>
                                            <TextBox Grid.Row="3" Grid.Column="1" Height="20" Text="{Binding Params, UpdateSourceTrigger=LostFocus}"/>
                                        </Grid>
                                    </DockPanel>
                                </Grid>
                            </Grid>
                        </GroupBox>
                        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal"  Margin="5">
                            <controls:IconButton Icon="add" Content="Add New" Click="AddGimmickButton_Click"/>
                            <controls:IconButton Icon="delete" Content="Remove Selected" Margin="5,0,0,0" b:ButtonBehaviours.IsDangerous="True" Command="{Binding RemoveSelectedGimmickCommand}"/>
                        </StackPanel>
                        <DataGrid x:Name="GimmickDataGrid" CanUserAddRows="True" AutoGenerateColumns="False" ItemsSource="{Binding Gimmicks}"
                              VirtualizingPanel.ScrollUnit="Pixel" SelectedItem="{Binding SelectedGimmick}">

                            <DataGrid.Columns>
                                <DataGridTextColumn Header="ID" Binding="{Binding Id}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="X" Binding="{Binding X}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Y" Binding="{Binding Y}" IsReadOnly="True"/>
                                <DataGridTemplateColumn Header="Gimmick" IsReadOnly="True">
                                    <DataGridTemplateColumn.CellTemplate>
                                        <DataTemplate>
                                            <StackPanel Orientation="Horizontal">
                                                <Image Width="16" Height="16" Stretch="Uniform" Source="{Binding GimmickIcon}"/>
                                                <TextBlock Margin="5,0,0,0" VerticalAlignment="Center" Text="{Binding GimmickIdAndName}"/>
                                            </StackPanel>
                                        </DataTemplate>
                                    </DataGridTemplateColumn.CellTemplate>
                                </DataGridTemplateColumn>
                                <DataGridTextColumn Header="Orientation" Binding="{Binding Orientation}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Unknown" Binding="{Binding UnknownValue}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Parameters" Binding="{Binding Params}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                        </DataGrid>
                    </DockPanel>
                </TabItem>
                <TabItem Header="Pokémon">
                    <DataGrid CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False" ItemsSource="{Binding PokemonPositions}"
                              VirtualizingPanel.ScrollUnit="Pixel" SelectedItem="{Binding SelectedPokemonPosition}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="ID" Binding="{Binding Id}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="X" Binding="{Binding X}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Y" Binding="{Binding Y}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Orientation" Binding="{Binding Orientation}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Unknown2" Binding="{Binding Unknown2}" IsReadOnly="True"/>
                        </DataGrid.Columns>
                        <DataGrid.RowDetailsTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <Grid DockPanel.Dock="Left" Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="22"/>
                                            <ColumnDefinition Width="22"/>
                                            <ColumnDefinition Width="22"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="22"/>
                                            <RowDefinition Height="22"/>
                                            <RowDefinition Height="22"/>
                                        </Grid.RowDefinitions>
                                        <controls:IconButton Icon="chevron_up" Command="{Binding DecrementYCommand}" Width="20" Height="20" Grid.Column="1"/>
                                        <controls:IconButton Icon="chevron_left" Command="{Binding DecrementXCommand}" Width="20" Height="20" Grid.Row="1"/>
                                        <controls:IconButton Icon="rotate_right" Command="{Binding RotateCommand}" Width="20" Height="20" Grid.Row="1" Grid.Column="1"/>
                                        <controls:IconButton Icon="chevron_right" Command="{Binding IncrementXCommand}" Width="20" Height="20" Grid.Column="2" Grid.Row="1"/>
                                        <controls:IconButton Icon="chevron_down" Command="{Binding IncrementYCommand}" Width="20" Height="20" Grid.Column="1" Grid.Row="2"/>
                                    </Grid>
                                    <Grid Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="100"/>
                                            <ColumnDefinition/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="25"/>
                                            <RowDefinition Height="25"/>
                                        </Grid.RowDefinitions>
                                        <TextBlock Height="20" Text="Unknown2" Grid.Row="1"/>
                                        <controls:NumberBox Grid.Row="1" Grid.Column="1" Height="20" Value="{Binding Unknown2, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"/>
                                    </Grid>
                                </DockPanel>
                            </DataTemplate>
                        </DataGrid.RowDetailsTemplate>
                    </DataGrid>
                </TabItem>
                <TabItem Header="Painter">
                    <ScrollViewer>
                        <Grid Margin="10">
                            <ContentPresenter Content="{Binding SelectedPainter}"/>
                        </Grid>
                    </ScrollViewer>
                </TabItem>
                <TabItem Header="Import/Export">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <StackPanel Grid.ColumnSpan="2" Orientation="Horizontal" VerticalAlignment="Center">
                            <controls:OverrideControl IsOverride="{Binding Is3dModelOverriden}"/>
                            <TextBlock Margin="4,0,0,0" VerticalAlignment="Center" Text="3D Model Overriden"/>
                        </StackPanel>
                        
                        <Button Margin="4" Grid.Column="0" Grid.Row="1" Command="{Binding ExportObjCommand}">Export 3D Model as OBJ</Button>
                        <Button Margin="4" Grid.Column="0" Grid.Row="2" Command="{Binding ExportPacCommand}">Export 3D Model as PAC</Button>
                        <Button Margin="4" Grid.Column="0" Grid.Row="3" Command="{Binding ImportObjCommand}">Import 3D Model from OBJ</Button>
                        <Button Margin="4" Grid.Column="0" Grid.Row="4" Command="{Binding ImportPacCommand}">Import 3D Model from PAC</Button>
                        <Button Margin="4" Grid.Column="0" Grid.Row="5" Command="{Binding RevertModelCommand}">Revert 3D Model to Default</Button>

                        <Button Margin="4" Grid.Column="1" Grid.Row="1" Command="{Binding ExportPslmCommand}">Export PSLM</Button>
                        <Button Margin="4" Grid.Column="1" Grid.Row="2" Command="{Binding ImportPslmCommand}">Import PSLM</Button>
                    </Grid>
                </TabItem>
            </TabControl>
            
        </DockPanel>
    </DockPanel>
</UserControl>
