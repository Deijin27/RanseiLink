<UserControl x:Class="RanseiLink.Windows.Views.MapView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
             d:Background="{DynamicResource WindowBackgroundBrush}"
             xmlns:vm="clr-namespace:RanseiLink.GuiCore.ViewModels;assembly=RanseiLink.GuiCore"
             xmlns:controls="clr-namespace:RanseiLink.Windows.Controls"
             xmlns:const="clr-namespace:RanseiLink.GuiCore.Constants;assembly=RanseiLink.GuiCore"
             xmlns:vc="clr-namespace:RanseiLink.Windows.ValueConverters"
             d:DataContext="{d:DesignInstance Type=vm:MapViewModel, IsDesignTimeCreatable=False}"
             mc:Ignorable="d" 
             d:DesignHeight="680" d:DesignWidth="800">
    <UserControl.Resources>
        <vc:TerrainToBrushConverter x:Key="Converter.TerrainToBrush"/>
        <vc:NotNullToVisibilityConverter x:Key="Converter.NotNullToVis"/>
        <vc:SubCellToBrushConverter x:Key="Converter.SubCellToBrush"/>
        <vc:GreaterThanZeroToVisiblityConverter x:Key="Converter.GTZeroToVis"/>
        <vc:PathToImageSourceConverter x:Key="Converter.PathToImage"/>
    </UserControl.Resources>
    <DockPanel Margin="10">
        <DockPanel Margin="10" DockPanel.Dock="Left">
            <Border HorizontalAlignment="Left" Width="{Binding ElementName=MatrixElement, Path=ActualWidth}" DockPanel.Dock="Top" BorderThickness="0.5" BorderBrush="Gray" Background="{DynamicResource WindowTransparentBackgroundBrush}" DataContext="{Binding MouseOverItem}" Padding="2">
                <UniformGrid Columns="2">
                    <UniformGrid.Resources>
                        <Style TargetType="{x:Type TextBlock}" BasedOn="{StaticResource {x:Type TextBlock}}">
                            <Setter Property="FontSize" Value="10"/>
                            <Setter Property="FontWeight" Value="DemiBold"/>
                        </Style>
                    </UniformGrid.Resources>
                    <StackPanel Orientation="Horizontal">
                        <TextBlock Width="28" d:Text="X: 10" Text="{Binding Parent.X, StringFormat='X: {0}'}"/>
                        <TextBlock Width="28" d:Text="Y: 10" Text="{Binding Parent.Y, StringFormat='Y: {0}'}"/>
                        <TextBlock Width="28" d:Text="Z: 40" Text="{Binding Z, StringFormat='Z: {0}'}"/>
                    </StackPanel>
                    
                    <TextBlock d:Text="Terrain: Poison" Text="{Binding Parent.Terrain, StringFormat='Terrain: {0}'}"/>
                    <TextBlock d:Text="Gimmick: HotSpring" Text="{Binding Parent.GimmicksString, StringFormat='Gimmick: {0}'}"/>
                    <TextBlock d:Text="Unknown3: 5" Text="{Binding Parent.Unknown3, StringFormat='Unknown3: {0}'}"/>
                    <TextBlock d:Text="Unknown4: 5" Text="{Binding Parent.Unknown4, StringFormat='Unknown4: {0}'}"/>
                    <TextBlock d:Text="Orientation: North" Text="{Binding Parent.Orientation, StringFormat='Orientation: {0}'}"/>
                </UniformGrid>
            </Border>
            <ItemsControl x:Name="MatrixElement" d:Width="300" d:Background="Gray" HorizontalAlignment="Left" ItemsSource="{Binding Matrix}">
                <ItemsControl.ItemTemplate>
                    <DataTemplate>
                        <ItemsControl ItemsSource="{Binding}">
                            <ItemsControl.ItemsPanel>
                                <ItemsPanelTemplate>
                                    <StackPanel Orientation="Horizontal"/>
                                </ItemsPanelTemplate>
                            </ItemsControl.ItemsPanel>
                            <ItemsControl.ItemTemplate>
                                <DataTemplate DataType="{x:Type vm:MapGridCellViewModel}">
                                    <Border x:Name="GridCellBorder" Width="27" Height="27" Background="{Binding Terrain, Converter={StaticResource Converter.TerrainToBrush}}">
                                        <Border.Style>
                                            <Style TargetType="Border">
                                                <Setter Property="BorderBrush" Value="Gray"/>
                                                <Setter Property="BorderThickness" Value="0.5"/>
                                                <Style.Triggers>
                                                    <Trigger Property="IsMouseOver" Value="True">
                                                        <Setter Property="BorderBrush" Value="Cyan"/>
                                                        <Setter Property="BorderThickness" Value="2"/>
                                                    </Trigger>
                                                    <DataTrigger Binding="{Binding IsSelected}" Value="True">
                                                        <Setter Property="BorderBrush" Value="Goldenrod"/>
                                                        <Setter Property="BorderThickness" Value="2"/>
                                                    </DataTrigger>
                                                </Style.Triggers>
                                            </Style>
                                        </Border.Style>
                                        <Grid>
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                                <RowDefinition/>
                                            </Grid.RowDefinitions>
                                            <!-- Z mouse enter trigger zones-->
                                            <Rectangle DataContext="{Binding SubCell0}" Fill="{Binding Info, Converter={StaticResource Converter.SubCellToBrush}}" Grid.Row="0" Grid.Column="0" MouseEnter="Rectangle_MouseEnter" MouseLeave="Rectangle_MouseLeave" MouseDown="Rectangle_MouseDown"/>
                                            <Rectangle DataContext="{Binding SubCell5}" Fill="{Binding Info, Converter={StaticResource Converter.SubCellToBrush}}" Grid.Row="0" Grid.Column="1" MouseEnter="Rectangle_MouseEnter" MouseLeave="Rectangle_MouseLeave" MouseDown="Rectangle_MouseDown"/>
                                            <Rectangle DataContext="{Binding SubCell1}" Fill="{Binding Info, Converter={StaticResource Converter.SubCellToBrush}}" Grid.Row="0" Grid.Column="2" MouseEnter="Rectangle_MouseEnter" MouseLeave="Rectangle_MouseLeave" MouseDown="Rectangle_MouseDown"/>
                                            <Rectangle DataContext="{Binding SubCell8}" Fill="{Binding Info, Converter={StaticResource Converter.SubCellToBrush}}" Grid.Row="1" Grid.Column="0" MouseEnter="Rectangle_MouseEnter" MouseLeave="Rectangle_MouseLeave" MouseDown="Rectangle_MouseDown"/>
                                            <Rectangle DataContext="{Binding SubCell4}" Fill="{Binding Info, Converter={StaticResource Converter.SubCellToBrush}}" Grid.Row="1" Grid.Column="1" MouseEnter="Rectangle_MouseEnter" MouseLeave="Rectangle_MouseLeave" MouseDown="Rectangle_MouseDown"/>
                                            <Rectangle DataContext="{Binding SubCell6}" Fill="{Binding Info, Converter={StaticResource Converter.SubCellToBrush}}" Grid.Row="1" Grid.Column="2" MouseEnter="Rectangle_MouseEnter" MouseLeave="Rectangle_MouseLeave" MouseDown="Rectangle_MouseDown"/>
                                            <Rectangle DataContext="{Binding SubCell3}" Fill="{Binding Info, Converter={StaticResource Converter.SubCellToBrush}}" Grid.Row="2" Grid.Column="0" MouseEnter="Rectangle_MouseEnter" MouseLeave="Rectangle_MouseLeave" MouseDown="Rectangle_MouseDown"/>
                                            <Rectangle DataContext="{Binding SubCell7}" Fill="{Binding Info, Converter={StaticResource Converter.SubCellToBrush}}" Grid.Row="2" Grid.Column="1" MouseEnter="Rectangle_MouseEnter" MouseLeave="Rectangle_MouseLeave" MouseDown="Rectangle_MouseDown"/>
                                            <Rectangle DataContext="{Binding SubCell2}" Fill="{Binding Info, Converter={StaticResource Converter.SubCellToBrush}}" Grid.Row="2" Grid.Column="2" MouseEnter="Rectangle_MouseEnter" MouseLeave="Rectangle_MouseLeave" MouseDown="Rectangle_MouseDown"/>
                                            <!-- Gimmick and pokemon markers -->
                                            <Rectangle Grid.Column="0" 
                                                       Grid.Row="0" 
                                                       Grid.ColumnSpan="3" 
                                                       Grid.RowSpan="3" 
                                                       IsHitTestVisible="False" 
                                                       Fill="White" 
                                                       Stroke="black" 
                                                       Width="8" 
                                                       Height="8"
                                                       HorizontalAlignment="Center" 
                                                       VerticalAlignment="Center"
                                                       Visibility="{Binding GimmickMarkerVisibility, Converter={StaticResource Converter.BoolToVisibility}}"
                                                       />
                                            <Image Grid.Column="0" 
                                                   Grid.Row="0" 
                                                   Grid.ColumnSpan="3" 
                                                   Grid.RowSpan="3" 
                                                   IsHitTestVisible="False" 
                                                   Width="20" 
                                                   Height="20" 
                                                   HorizontalAlignment="Center" 
                                                   VerticalAlignment="Center" 
                                                   Stretch="Uniform"
                                                   Source="{Binding GimmickImagePath, Converter={StaticResource Converter.PathToImage}}"
                                                   />
                                            <Rectangle Grid.Column="0" 
                                                       Grid.Row="0" 
                                                       Grid.ColumnSpan="3" 
                                                       Grid.RowSpan="3" 
                                                       IsHitTestVisible="False" 
                                                       Fill="Black" 
                                                       Margin="1" 
                                                       Width="8" 
                                                       Height="8" 
                                                       HorizontalAlignment="Center" 
                                                       VerticalAlignment="Center"
                                                       Visibility="{Binding PokemonMarkerVisibility, Converter={StaticResource Converter.BoolToVisibility}}" 
                                                       Stroke="White"/>
                                        </Grid>
                                    </Border>
                                </DataTemplate>
                            </ItemsControl.ItemTemplate>
                        </ItemsControl>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </DockPanel>

        <DockPanel Margin="10">
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal" Margin="0,0,0,10">
                <TextBlock Text="View Mode"/>
                <ComboBox ItemsSource="{x:Static const:EnumProvider.RenderModeItems}" SelectedItem="{Binding RenderMode}" Width="100" Margin="10,0"/>
                <CheckBox IsChecked="{Binding HideGimmicks}" Content="Hide Gimmicks" VerticalAlignment="Center" Margin="0,0,10,0"/>
                <CheckBox IsChecked="{Binding HidePokemonMarkers}" Content="Hide Pokemon" VerticalAlignment="Center"/>
            </StackPanel>
            <StackPanel DockPanel.Dock="Top" Orientation="Horizontal">
                <TextBlock d:Text="Width: 10" Text="{Binding Width, StringFormat='Width: {0}'}"/>
                <TextBlock d:Text="Height: 10" Text="{Binding Height, StringFormat='Height: {0}'}" Margin="10,0"/>
                <controls:IconButton Icon="resize" Text="Modify Dimensions" Command="{Binding ModifyMapDimensionsCommand}"/>
                <controls:IconButton Icon="visibility" Text="View 3D Model" Command="{Binding View3DModelCommand}" Margin="10,0"/>
            </StackPanel>

            <TabControl Margin="0,20,0,0">
                <TabItem Header="Selected Cell">
                    <ContentPresenter Margin="10" Content="{Binding SelectedCell}">
                        <ContentPresenter.ContentTemplate>
                            <DataTemplate DataType="{x:Type vm:MapGridCellViewModel}">
                                <Grid>
                                    <Grid.ColumnDefinitions>
                                        <ColumnDefinition Width="100"/>
                                        <ColumnDefinition/>
                                    </Grid.ColumnDefinitions>
                                    <Grid.RowDefinitions>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                        <RowDefinition Height="30"/>
                                    </Grid.RowDefinitions>
                                    <StackPanel Grid.ColumnSpan="2" Orientation="Horizontal">
                                        <TextBlock Width="38" d:Text="X: 10" Text="{Binding X, StringFormat='X: {0}'}"/>
                                        <TextBlock Width="38" d:Text="Y: 10" Text="{Binding Y, StringFormat='Y: {0}'}"/>
                                    </StackPanel>

                                    <TextBlock Height="20" Grid.Row="1">Terrain</TextBlock>
                                    <ComboBox Grid.Row="1" Grid.Column="1" Height="20" SelectedItem="{Binding Terrain}" ItemsSource="{x:Static const:EnumProvider.TerrainItems}"/>
                                    <TextBlock Height="20" Grid.Row="2">Unknown3</TextBlock>
                                    <ComboBox Grid.Row="2" Grid.Column="1" Height="20" SelectedItem="{Binding Unknown3}" ItemsSource="{x:Static const:EnumProvider.Unknown3Items}"/>
                                    <TextBlock Height="20" Grid.Row="3">Unknown4</TextBlock>
                                    <controls:NumberBox Grid.Row="3" Grid.Column="1" Value="{Binding Unknown4}" Max="255"/>
                                    <TextBlock Height="20" Grid.Row="4">Orientation</TextBlock>
                                    <ComboBox Grid.Row="4" Grid.Column="1" Height="20" SelectedItem="{Binding Orientation}" ItemsSource="{x:Static const:EnumProvider.OrientationAltItems}"/>
                                </Grid>
                            </DataTemplate>
                        </ContentPresenter.ContentTemplate>
                    </ContentPresenter>
                </TabItem>
                <TabItem Header="Gimmicks">
                    <DockPanel>
                        <StackPanel DockPanel.Dock="Top" Orientation="Horizontal"  Margin="5">
                            <controls:IconButton Icon="add" Text="Add New" Click="AddGimmickButton_Click"/>
                            <controls:IconButton Icon="delete" Text="Remove Selected" Margin="5,0,0,0" Command="{Binding RemoveSelectedGimmickCommand}"/>
                        </StackPanel>
                        <DataGrid x:Name="GimmickDataGrid" CanUserAddRows="True" AutoGenerateColumns="False" ItemsSource="{Binding Gimmicks}"
                              VirtualizingPanel.ScrollUnit="Pixel" SelectedItem="{Binding SelectedGimmick}">

                            <DataGrid.Columns>
                                <DataGridTextColumn Header="X" Binding="{Binding X}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Y" Binding="{Binding Y}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Gimmick" Binding="{Binding Gimmick}" IsReadOnly="True"/>
                                <DataGridTextColumn Header="Orientation" Binding="{Binding Orientation}" IsReadOnly="True"/>
                            </DataGrid.Columns>
                            <DataGrid.RowDetailsTemplate>
                                <DataTemplate>
                                    <DockPanel>
                                        <Grid DockPanel.Dock="Left" Margin="5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="22"/>
                                                <ColumnDefinition Width="22"/>
                                                <ColumnDefinition Width="22"/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="22"/>
                                                <RowDefinition Height="22"/>
                                                <RowDefinition Height="22"/>
                                            </Grid.RowDefinitions>
                                            <controls:IconButton Icon="chevron_up" Command="{Binding DecrementYCommand}" Width="20" Height="20" Grid.Column="1"/>
                                            <controls:IconButton Icon="chevron_left" Command="{Binding DecrementXCommand}" Width="20" Height="20" Grid.Row="1"/>
                                            <controls:IconButton Icon="rotate_right" Command="{Binding RotateCommand}" Width="20" Height="20" Grid.Row="1" Grid.Column="1"/>
                                            <controls:IconButton Icon="chevron_right" Command="{Binding IncrementXCommand}" Width="20" Height="20" Grid.Column="2" Grid.Row="1"/>
                                            <controls:IconButton Icon="chevron_down" Command="{Binding IncrementYCommand}" Width="20" Height="20" Grid.Column="1" Grid.Row="2"/>
                                        </Grid>
                                        <Grid Margin="5">
                                            <Grid.ColumnDefinitions>
                                                <ColumnDefinition Width="100"/>
                                                <ColumnDefinition/>
                                            </Grid.ColumnDefinitions>
                                            <Grid.RowDefinitions>
                                                <RowDefinition Height="25"/>
                                                <RowDefinition Height="25"/>
                                                <RowDefinition Height="25"/>
                                            </Grid.RowDefinitions>
                                            <TextBlock Height="20" Text="Gimmick" Grid.Row="0"/>
                                            <ComboBox Grid.Row="0" Grid.Column="1" Height="20" SelectedItem="{Binding Gimmick, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}" ItemsSource="{x:Static const:EnumProvider.GimmickItems}"/>
                                            <TextBlock Height="20" Text="Unknown Value" Grid.Row="1"/>
                                            <controls:NumberBox Grid.Row="1" Grid.Column="1" Height="20" Value="{Binding UnknownValue, UpdateSourceTrigger=LostFocus}"/>
                                            <TextBlock Height="20" Text="Parameters" Grid.Row="2"/>
                                            <TextBox Grid.Row="2" Grid.Column="1" Height="20" Text="{Binding Params, UpdateSourceTrigger=LostFocus}"/>
                                        </Grid>
                                    </DockPanel>
                                </DataTemplate>
                            </DataGrid.RowDetailsTemplate>
                        </DataGrid>
                    </DockPanel>
                </TabItem>
                <TabItem Header="Pokémon">
                    <DataGrid CanUserAddRows="False" CanUserDeleteRows="False" AutoGenerateColumns="False" ItemsSource="{Binding PokemonPositions}"
                              VirtualizingPanel.ScrollUnit="Pixel" SelectedItem="{Binding SelectedPokemonPosition}">
                        <DataGrid.Columns>
                            <DataGridTextColumn Header="ID" Binding="{Binding Id}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="X" Binding="{Binding X}" IsReadOnly="True"/>
                            <DataGridTextColumn Header="Y" Binding="{Binding Y}" IsReadOnly="True"/>
                        </DataGrid.Columns>
                        <DataGrid.RowDetailsTemplate>
                            <DataTemplate>
                                <DockPanel>
                                    <Grid DockPanel.Dock="Left" Margin="5">
                                        <Grid.ColumnDefinitions>
                                            <ColumnDefinition Width="22"/>
                                            <ColumnDefinition Width="22"/>
                                            <ColumnDefinition Width="22"/>
                                        </Grid.ColumnDefinitions>
                                        <Grid.RowDefinitions>
                                            <RowDefinition Height="22"/>
                                            <RowDefinition Height="22"/>
                                            <RowDefinition Height="22"/>
                                        </Grid.RowDefinitions>
                                        <Button Command="{Binding DecrementYCommand}" Width="20" Height="20" Grid.Column="1">
                                            <Path Stroke="{DynamicResource ForegroundBrush}" Data="{StaticResource UpArrowGeometry}"/>
                                        </Button>
                                        <Button Command="{Binding DecrementXCommand}" Width="20" Height="20" Grid.Row="1">
                                            <Path Stroke="{DynamicResource ForegroundBrush}" Data="{StaticResource LeftArrowGeometry}"/>
                                        </Button>
                                        <Button Command="{Binding IncrementXCommand}" Width="20" Height="20" Grid.Column="2" Grid.Row="1">
                                            <Path Stroke="{DynamicResource ForegroundBrush}" Data="{StaticResource RightArrowGeometry}"/>
                                        </Button>
                                        <Button Command="{Binding IncrementYCommand}" Width="20" Height="20" Grid.Column="1" Grid.Row="2">
                                            <Path Stroke="{DynamicResource ForegroundBrush}" Data="{StaticResource DownArrowGeometry}"/>
                                        </Button>
                                    </Grid>
                                </DockPanel>
                            </DataTemplate>
                        </DataGrid.RowDetailsTemplate>
                    </DataGrid>
                </TabItem>
                <TabItem Header="Terrain">
                    <Grid Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                        </Grid.RowDefinitions>
                        <TextBlock Margin="0,0,0,20" Grid.ColumnSpan="2" TextWrapping="Wrap"><Span FontWeight="Bold">Terrain Painting</Span> - When active, click on a cell to set the terrain to the selected terrain brush value</TextBlock>
                        <CheckBox IsChecked="{Binding TerrainPaintingActive}" Grid.Row="1" Grid.ColumnSpan="2">Terrain Painting Active</CheckBox>
                        <TextBlock Grid.Row="2" Height="20">Terrain Brush</TextBlock>
                        <ComboBox Grid.Row="2" Grid.Column="1" Height="20" SelectedItem="{Binding TerrainBrush}" ItemsSource="{x:Static const:EnumProvider.TerrainItems}"/>
                        <Image Grid.Row="3" Grid.Column="0" Width="30" Height="30" Stretch="Uniform" Source="{Binding TerrainBrushImagePath, Converter={StaticResource Converter.PathToImage}}"/>
                    </Grid>
                </TabItem>
                <TabItem Header="Elevation">
                    <Grid Margin="10">
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="100"/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="Auto"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                        </Grid.RowDefinitions>
                        <TextBlock Margin="0,0,0,20" Grid.ColumnSpan="2" TextWrapping="Wrap"><Span FontWeight="Bold">Elevation Painting</Span> - When active, click on a cell to set the elevation to the selected value</TextBlock>
                        <CheckBox IsChecked="{Binding ElevationPaintingActive}" Grid.Row="1" Grid.ColumnSpan="2">Elevation Painting Active</CheckBox>
                        <CheckBox IsChecked="{Binding PaintElevationEntireCell}" Grid.Row="2" Grid.ColumnSpan="2">Paint Entire Cell (rather than just sub-cell)</CheckBox>
                        <TextBlock Grid.Row="3" Height="20" FontWeight="Bold" Grid.ColumnSpan="2" HorizontalAlignment="Center">Elevation to Paint</TextBlock>
                        <StackPanel Orientation="Horizontal" Grid.Row="4" Grid.ColumnSpan="2" HorizontalAlignment="Center">
                            <Button Margin="4,0" Padding="6,0" Command="{Binding ModifyElevationToPaintCommand}" CommandParameter="-0.5">-0.5</Button>
                            <Button Margin="4,0" Padding="6,0" Command="{Binding ModifyElevationToPaintCommand}" CommandParameter="-25.0">-25.0</Button>
                            <Button Margin="4,0" Padding="6,0" Command="{Binding ModifyElevationToPaintCommand}" CommandParameter="-12.5">-12.5</Button>
                            <TextBlock TextAlignment="Center" Width="60" VerticalAlignment="Center" Text="{Binding ElevationToPaint}" d:Text="1212.5"></TextBlock>
                            <Button Margin="4,0" Padding="6,0" Command="{Binding ModifyElevationToPaintCommand}" CommandParameter="12.5">+12.5</Button>
                            <Button Margin="4,0" Padding="6,0" Command="{Binding ModifyElevationToPaintCommand}" CommandParameter="25.0">+25.0</Button>
                            <Button Margin="4,0" Padding="6,0" Command="{Binding ModifyElevationToPaintCommand}" CommandParameter="0.5">+0.5</Button>
                        </StackPanel>
                    </Grid>
                </TabItem>
                <TabItem Header="Import/Export">
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition/>
                            <ColumnDefinition/>
                        </Grid.ColumnDefinitions>
                        <Grid.RowDefinitions>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition Height="30"/>
                            <RowDefinition/>
                        </Grid.RowDefinitions>
                        <StackPanel Grid.ColumnSpan="2" Orientation="Horizontal" VerticalAlignment="Center">
                            <controls:OverrideControl IsOverride="{Binding Is3dModelOverriden}"/>
                            <TextBlock Margin="4,0,0,0" VerticalAlignment="Center" Text="3D Model Overriden"/>
                        </StackPanel>
                        
                        <Button Margin="4" Grid.Column="0" Grid.Row="1" Command="{Binding ExportObjCommand}">Export 3D Model as OBJ</Button>
                        <Button Margin="4" Grid.Column="0" Grid.Row="2" Command="{Binding ExportPacCommand}">Export 3D Model as PAC</Button>
                        <Button Margin="4" Grid.Column="0" Grid.Row="3" Command="{Binding ImportObjCommand}">Import 3D Model from OBJ</Button>
                        <Button Margin="4" Grid.Column="0" Grid.Row="4" Command="{Binding ImportPacCommand}">Import 3D Model from PAC</Button>
                        <Button Margin="4" Grid.Column="0" Grid.Row="5" Command="{Binding RevertModelCommand}">Revert 3D Model to Default</Button>

                        <Button Margin="4" Grid.Column="1" Grid.Row="1" Command="{Binding ExportPslmCommand}">Export PSLM</Button>
                        <Button Margin="4" Grid.Column="1" Grid.Row="2" Command="{Binding ImportPslmCommand}">Import PSLM</Button>
                    </Grid>
                </TabItem>
            </TabControl>
            
        </DockPanel>
    </DockPanel>
</UserControl>
