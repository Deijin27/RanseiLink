<UserControl x:Class="RanseiLink.Windows.Views.ModSelectionView"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:RanseiLink.Windows.Views"
             xmlns:vm="clr-namespace:RanseiLink.GuiCore.ViewModels;assembly=RanseiLink.GuiCore"
             xmlns:controls="clr-namespace:RanseiLink.Windows.Controls"
             xmlns:b="clr-namespace:RanseiLink.Windows.Behaviours"
             d:DataContext="{d:DesignInstance vm:ModSelectionViewModel, IsDesignTimeCreatable=False}"
             mc:Ignorable="d" 
             d:DesignHeight="550" d:DesignWidth="500" Background="Transparent" d:Background="{DynamicResource WindowBackgroundBrush}">
    <DockPanel>
        <Border Width="180" BorderThickness="0">
            <Grid d:Background="{DynamicResource WindowTransparentBackgroundBrush}">
                <StackPanel Margin="10">
                    <StackPanel.Resources>
                        <Style TargetType="{x:Type Button}" BasedOn="{StaticResource {x:Type Button}}">
                            <Setter Property="Margin" Value="0,0,0,10"/>
                        </Style>
                        <Style TargetType="{x:Type controls:IconButton}" BasedOn="{StaticResource {x:Type controls:IconButton}}">
                            <Setter Property="Margin" Value="0,0,0,10"/>
                        </Style>
                    </StackPanel.Resources>
                    <controls:IconButton Icon="add" Content="Create Mod" Command="{Binding CreateModCommand}"/>
                 
                    <controls:IconButton Icon="input" Content="Import Mod" Command="{Binding ImportModCommand}"/>
                    <Button Height="Auto" Command="{Binding UpgradeOutdatedModsCommand}" Visibility="{Binding OutdatedModsExist, Converter={StaticResource Converter.BoolToVisibility}}">
                        <TextBlock TextWrapping="Wrap" TextAlignment="Center" Margin="5">
                            Upgrade Old Mods
                            <LineBreak/>
                            <Span Foreground="{DynamicResource AltForegroundBrush}" FontSize="10">Some mods are outdated. Click here to upgrade them to the latest version and they will appear in the list. </Span>
                        </TextBlock>
                    </Button>
                    <TextBlock FontSize="9" Margin="0,0,0,10" TextWrapping="WrapWithOverflow">Right click on a mod in the list for more options specific to that mod</TextBlock>
                    <Button Height="Auto" Command="{Binding PopulateGraphicsDefaultsCommand}">
                        <TextBlock TextWrapping="Wrap" TextAlignment="Center" Margin="5">
                            Populate Graphics Defaults
                            <LineBreak/>
                            <Span Foreground="{DynamicResource AltForegroundBrush}" FontSize="10">Setting up graphics defaults allow you to see and edit images in mods</Span>
                        </TextBlock>
                    </Button>
                    <controls:IconButton Icon="download" Command="{Binding UpdateCommand}" Content="New Update Available" Visibility="{Binding IsUpdateAvailable, Converter={StaticResource Converter.BoolToVisibility}}"/>
                    <controls:IconButton Icon="bug_report" Command="{Binding ReportBugCommand}" Content="Report Bug"/>
                </StackPanel>
            </Grid>
            
        </Border>

        <DockPanel Margin="10" DockPanel.Dock="Top">
            <controls:IconControl DockPanel.Dock="Left" Icon="sell" ToolTip="Tags" />
            <ItemsControl ItemsSource="{Binding FilterableTags}" VerticalAlignment="Center">
                <ItemsControl.ItemsPanel>
                    <ItemsPanelTemplate>
                        <WrapPanel/>
                    </ItemsPanelTemplate>
                </ItemsControl.ItemsPanel>
                <ItemsControl.ItemTemplate>
                    <DataTemplate DataType="vm:FilterableTag">
                        <ToggleButton Margin="3,0,0,3" Content="{Binding Tag}" IsChecked="{Binding Checked}" Style="{StaticResource TagToggleButtonStyle}"/>
                    </DataTemplate>
                </ItemsControl.ItemTemplate>
            </ItemsControl>
        </DockPanel>
        <ItemsControl ItemsSource="{Binding ModItems}" Margin="10,0,0,0"  
                      Style="{DynamicResource ItemsControlVirtualizedStyle}" VirtualizingPanel.ScrollUnit="Pixel">
            <ItemsControl.ItemTemplate>
                <DataTemplate DataType="{x:Type vm:ModListItemViewModel}">
                    <Button HorizontalContentAlignment="Left"
                                CommandParameter="{Binding Mod}" 
                                Command="{Binding DataContext.ModItemClicked, RelativeSource={RelativeSource AncestorType={x:Type local:ModSelectionView}}}">
                        <Button.Style>
                            <Style TargetType="Button" BasedOn="{StaticResource RoundedGrayHoverButtonStyle}">
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                        <Setter Property="Background" Value="{DynamicResource WindowMouseOverBrush}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        <Button.ContextMenu>
                            <ContextMenu>
                                <MenuItem Header="Patch rom with mod" Command="{Binding PatchRomCommand}">
                                    <MenuItem.Icon>
                                        <controls:IconControl Icon="publish" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Export mod" Command="{Binding ExportModCommand}">
                                    <MenuItem.Icon>
                                        <controls:IconControl Icon="output" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Edit mod info" Command="{Binding EditModInfoCommand}">
                                    <MenuItem.Icon>
                                        <controls:IconControl Icon="edit_note" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Create new mod based on this" Command="{Binding CreateModBasedOnCommand}">
                                    <MenuItem.Icon>
                                        <controls:IconControl Icon="library_add" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Toggle Pin" Command="{Binding TogglePinCommand}">
                                    <MenuItem.Icon>
                                        <controls:IconControl Icon="keep" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="Plugins" ItemsSource="{Binding PluginItems}">
                                    <MenuItem.Icon>
                                        <controls:IconControl Icon="extension" />
                                    </MenuItem.Icon>
                                    <MenuItem.ItemContainerStyle>
                                        <Style TargetType="{x:Type MenuItem}">
                                            <Setter Property="Command" Value="{Binding DataContext.RunPluginCommand, RelativeSource={RelativeSource Mode=FindAncestor, AncestorType={x:Type MenuItem}, AncestorLevel=1}}"/>
                                            <Setter Property="CommandParameter" Value="{Binding}"/>
                                            <Setter Property="HeaderTemplate">
                                                <Setter.Value>
                                                    <DataTemplate>
                                                        <TextBlock>
                                                            <TextBlock.Text>
                                                                <MultiBinding StringFormat="{}{0} v{1} by {2}">
                                                                    <Binding Path="Name" />
                                                                    <Binding Path="Version" />
                                                                    <Binding Path="Author" />
                                                                </MultiBinding>
                                                            </TextBlock.Text>
                                                        </TextBlock>
                                                    </DataTemplate>

                                                </Setter.Value>
                                            </Setter>
                                        </Style>
                                    </MenuItem.ItemContainerStyle>
                                </MenuItem>
                                <Separator/>
                                <MenuItem Header="Delete" Command="{Binding DeleteModCommand}" b:ButtonBehaviours.IsDangerous="True">
                                    <MenuItem.Icon>
                                        <controls:IconControl Icon="delete" />
                                    </MenuItem.Icon>
                                </MenuItem>
                                <MenuItem Header="Open folder in file explorer" Command="{Binding ShowInExplorerCommand}">
                                    <MenuItem.Icon>
                                        <controls:IconControl Icon="folder_open" />
                                    </MenuItem.Icon>
                                </MenuItem>
                            </ContextMenu>
                        </Button.ContextMenu>
                        <DockPanel>
                            <controls:IconControl Icon="keep" DockPanel.Dock="Left" Visibility="{Binding IsPinned, Converter={StaticResource Converter.BoolToVisibility}}"/>
                            <controls:IconControl Icon="fiber_new" DockPanel.Dock="Left" Visibility="{Binding IsNew, Converter={StaticResource Converter.BoolToVisibility}}"/>
                            <Image Margin="5,0,0,0" Width="33" DockPanel.Dock="Left" Source="{Binding Banner}" Stretch="Uniform" RenderOptions.BitmapScalingMode="NearestNeighbor"/>
                        
                            <!--<TextBlock DockPanel.Dock="Left" Text="(New)"/>-->
                            <controls:ModInfoControl ModInfo="{Binding Mod, Mode=OneWay}"/>
                        </DockPanel>
                    </Button>
                </DataTemplate>
            </ItemsControl.ItemTemplate>
        </ItemsControl>
    </DockPanel>
</UserControl>
