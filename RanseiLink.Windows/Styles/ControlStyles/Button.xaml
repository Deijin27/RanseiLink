<ResourceDictionary xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
                    xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
                    xmlns:local="clr-namespace:RanseiLink.Windows.Controls"
                    xmlns:b="clr-namespace:RanseiLink.Windows.Behaviours">

    <Style x:Key="ButtonStyle1" TargetType="{x:Type ButtonBase}">
        <Setter Property="Foreground" Value="{DynamicResource ForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
        <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
        <Setter Property="HorizontalContentAlignment" Value="Center"/>
        <Setter Property="VerticalContentAlignment" Value="Center"/>
        <Setter Property="BorderThickness" Value="1"/>
        <Setter Property="MinHeight" Value="20"/>
        <Setter Property="MinWidth" Value="20"/>
        <Setter Property="Padding" Value="1"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type ButtonBase}">
                    <Border Padding="{TemplateBinding Padding}" TextElement.Foreground="{TemplateBinding Foreground}"
                            CornerRadius="4"
                            BorderBrush="{TemplateBinding BorderBrush}" 
                            BorderThickness="{TemplateBinding BorderThickness}"
                            Background="{TemplateBinding Background}">
                        <ContentPresenter x:Name="contentPresenter" 
                                          HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" 
                                          VerticalAlignment="{TemplateBinding VerticalContentAlignment}"/>
                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="BorderBrush" Value="{DynamicResource ControlMouseOverBorderBrush}"/>
                <Setter Property="Background" Value="{DynamicResource ButtonMouseOverBrush}"/>
            </Trigger>
            <MultiTrigger>
                <MultiTrigger.Conditions>
                    <Condition Property="IsMouseOver" Value="True"/>
                    <Condition Property="b:ButtonBehaviours.IsDangerous" Value="True"/>
                </MultiTrigger.Conditions>
                <Setter Property="Background" Value="{DynamicResource ErrorBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource OnErrorBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ErrorBrush}"/>
            </MultiTrigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource ButtonPressedBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundDisabledBrush}"/>
            </Trigger>
        </Style.Triggers>
    </Style>

    <Style TargetType="{x:Type Button}" BasedOn="{StaticResource ButtonStyle1}"/>
    <Style TargetType="{x:Type RepeatButton}" BasedOn="{StaticResource ButtonStyle1}"/>
    <Style TargetType="{x:Type ToggleButton}" BasedOn="{StaticResource ButtonStyle1}"/>

    <Style TargetType="{x:Type local:IconButton}" BasedOn="{StaticResource ButtonStyle1}">
        <Setter Property="VerticalAlignment" Value="Center"/>
        <Setter Property="Template">
            <Setter.Value>
                <ControlTemplate TargetType="{x:Type local:IconButton}">
                    <Border Padding="{TemplateBinding Padding}" 
                CornerRadius="4"
                Background="{TemplateBinding Background}"
                BorderBrush="{TemplateBinding BorderBrush}" 
                BorderThickness="{TemplateBinding BorderThickness}"
                >
                        <Grid HorizontalAlignment="{TemplateBinding HorizontalContentAlignment}" VerticalAlignment="{TemplateBinding VerticalContentAlignment}">
                            <Grid.ColumnDefinitions>
                                <ColumnDefinition Width="13"/>
                                <ColumnDefinition/>
                            </Grid.ColumnDefinitions>
                            <TextBlock Foreground="{TemplateBinding Foreground}" Style="{DynamicResource IconTextBlockStyle}"  Height="Auto" FontSize="14" x:Name="PART_IconTextBlock" HorizontalAlignment="Center" VerticalAlignment="Center" Text="&#xe574;"/>
                            <ContentPresenter Visibility="{TemplateBinding Content, Converter={StaticResource Converter.NotNullToVis}}" x:Name="contentPresenter" Grid.Column="1" Margin="3,0"
                                              TextElement.Foreground="{TemplateBinding Foreground}"
                            />
                        </Grid>

                    </Border>
                </ControlTemplate>
            </Setter.Value>
        </Setter>
    </Style>


    <Style x:Key="AccentButtonStyle" TargetType="{x:Type ButtonBase}" BasedOn="{StaticResource ButtonStyle1}">
        <Setter Property="Foreground" Value="{DynamicResource AccentForegroundBrush}"/>
        <Setter Property="Background" Value="{DynamicResource AccentBrush}"/>
        <Setter Property="BorderThickness" Value="0"/>
        <Style.Triggers>
            <Trigger Property="IsMouseOver" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentMouseOverBrush}"/>
            </Trigger>
            <Trigger Property="IsPressed" Value="True">
                <Setter Property="Background" Value="{DynamicResource AccentSecondaryBrush}"/>
                <Setter Property="Foreground" Value="{DynamicResource AccentSecondaryForegroundBrush}"/>
            </Trigger>
            <Trigger Property="IsEnabled" Value="False">
                <Setter Property="Foreground" Value="{DynamicResource ForegroundDisabledBrush}"/>
                <Setter Property="Background" Value="{DynamicResource ButtonBackgroundBrush}"/>
                <Setter Property="BorderBrush" Value="{DynamicResource ControlBorderBrush}"/>
                <Setter Property="BorderThickness" Value="1"/>
            </Trigger>
        </Style.Triggers>
    </Style>
</ResourceDictionary>